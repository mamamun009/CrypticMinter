{"version":3,"file":"static/js/157.5a8a353c.chunk.js","mappings":"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","sources":["components/Overview/MintedModal.js","views/Overview.js","../node_modules/@headlessui/react/src/components/tabs/tabs.tsx"],"sourcesContent":["import { Fragment, useEffect, useState } from 'react';\nimport { Dialog, Transition } from '@headlessui/react';\nimport Icon from '../Utils/Icon';\nimport { crossIcon, partyPoppers } from '../../assets/icons';\n\nconst MintedModal = ({ isOpen, onClose }) => {\n  const [pop, setPop] = useState(false);\n  const [hidePop, setHidePop] = useState(false);\n  const [displayPop, setDisplayPop] = useState(true);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTimeout(() => {\n        setPop(true);\n      }, 300);\n\n      setTimeout(() => {\n        setHidePop(false);\n      }, 1000);\n\n      setTimeout(() => {\n        setDisplayPop(false);\n      }, 1300);\n    } else {\n      setTimeout(() => {\n        setPop(false);\n        setHidePop(true);\n        setDisplayPop(true);\n      }, 400);\n    }\n  }, [isOpen]);\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog\n        onClose={onClose}\n        as=\"div\"\n        className=\"fixed inset-0 z-10 overflow-y-auto\"\n      >\n        <div className=\"min-h-screen px-4.5 text-center\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className={`fixed inset-0 bg-black opacity-30`} />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className=\"inline-block h-screen align-middle\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 scale-95\"\n            enterTo=\"opacity-100 scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 scale-100\"\n            leaveTo=\"opacity-0 scale-95\"\n          >\n            <div className=\"inline-block w-full relative max-w-[484px] py-6 my-8  text-left align-middle transition-all transform bg-white shadow-xl px-7 rounded-2xl\">\n              <div\n                className={`flex relative items-center justify-between px-1 text-gray-900`}\n              >\n                <span />\n                <button\n                  className=\"flex items-center justify-center flex-shrink-0 w-10 h-10 transition duration-200 border-2 border-gray-300 rounded-full hover:shadow hover:border-gray-400\"\n                  onClick={onClose}\n                >\n                  <Icon\n                    icon={crossIcon}\n                    className=\"w-3.5 h-3.5 fill-gray-600\"\n                  />\n                </button>\n              </div>\n              <Dialog.Title className=\"text-[40px] px-10 leading-[54px] text-center font-medium tracking-tight font-madeOuterSans text-transparent bg-clip-text bg-gradient-to-tr from-[#333089] via-[#6b4ebb] to-[#9061dd]\">\n                Your NFT has been minted!\n              </Dialog.Title>\n              <div className=\"px-1\">\n                <Dialog.Description className=\"mt-10 leading-6 text-center text-gray-900\">\n                  Congratualtion! Time to show off your dunks to everyone in the\n                  metaverse. Let’s get them listed for sale\n                </Dialog.Description>\n\n                <div className=\"flex justify-center mt-6\">\n                  <button\n                    className=\"w-full max-w-xs p-4 font-medium leading-none text-white transition rounded-lg bg-blue-dark font-madeOuterSans hover:shadow-md\"\n                    onClick={onClose}\n                  >\n                    View Item\n                  </button>\n                </div>\n              </div>\n\n              <div\n                className={`absolute -translate-x-1/2 scale-0 -translate-y-1/2 top-1/2 left-1/2 \n                ${hidePop ? '' : 'opacity-0'}\n                ${displayPop ? '' : 'hidden'}\n                ${pop ? 'scale-[5]' : ''}\n                transition-all duration-300 ease-in-out\n              `}\n              >\n                <Icon icon={partyPoppers} />\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\nexport default MintedModal;\n","import { useState } from 'react';\n// import overviewData1 from '../data/overviewData';\nimport MintedModal from '../components/Overview/MintedModal';\nimport { useNavigate } from 'react-router-dom';\nimport Details from '../components/Overview/Details';\n\nconst Overview = () => {\n  const navigate = useNavigate();\n  const [minted, setMinted] = useState(false);\n\n  return (\n    <div className=\"relative flex flex-col w-full h-full\">\n      <div className=\"w-full px-12 py-4.5 bg-blue-banner leading-7 font-medium text-center\">\n        You won’t be able to change your metadata once your NFT is minted.\n        Please review the information below before you tap mint or you can go\n        back to make changes.\n      </div>\n\n      <Details review />\n\n      <div className=\"flex justify-center p-6 mt-auto bg-gray-100 gap-14\">\n        <button\n          className=\"w-48 p-4 font-medium leading-4 text-white transition rounded-md shadow bg-blue-light font-madeOuterSans hover:shadow-md\"\n          onClick={() => {\n            navigate(-1);\n          }}\n        >\n          Edit\n        </button>\n        <button\n          className=\"w-48 p-4 font-medium leading-4 text-white transition rounded-md shadow bg-blue-dark font-madeOuterSans hover:shadow-md\"\n          onClick={() => setMinted(true)}\n        >\n          Mint\n        </button>\n      </div>\n\n      <MintedModal\n        isOpen={minted}\n        onClose={() => {\n          setMinted(false);\n          navigate('/view-item');\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Overview;\n","import React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n  useEffect,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n  KeyboardEvent as ReactKeyboardEvent,\n  Dispatch,\n  ContextType,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { render, Features, PropsForFeatures } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\nimport { Keys } from '../../components/keyboard'\nimport { focusIn, Focus } from '../../utils/focus-management'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\ninterface StateDefinition {\n  selectedIndex: number | null\n\n  orientation: 'horizontal' | 'vertical'\n  activation: 'auto' | 'manual'\n\n  tabs: MutableRefObject<HTMLElement | null>[]\n  panels: MutableRefObject<HTMLElement | null>[]\n}\n\nenum ActionTypes {\n  SetSelectedIndex,\n  SetOrientation,\n  SetActivation,\n\n  RegisterTab,\n  UnregisterTab,\n\n  RegisterPanel,\n  UnregisterPanel,\n\n  ForceRerender,\n}\n\ntype Actions =\n  | { type: ActionTypes.SetSelectedIndex; index: number }\n  | { type: ActionTypes.SetOrientation; orientation: StateDefinition['orientation'] }\n  | { type: ActionTypes.SetActivation; activation: StateDefinition['activation'] }\n  | { type: ActionTypes.RegisterTab; tab: MutableRefObject<HTMLElement | null> }\n  | { type: ActionTypes.UnregisterTab; tab: MutableRefObject<HTMLElement | null> }\n  | { type: ActionTypes.RegisterPanel; panel: MutableRefObject<HTMLElement | null> }\n  | { type: ActionTypes.UnregisterPanel; panel: MutableRefObject<HTMLElement | null> }\n  | { type: ActionTypes.ForceRerender }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.SetSelectedIndex](state, action) {\n    if (state.selectedIndex === action.index) return state\n    return { ...state, selectedIndex: action.index }\n  },\n  [ActionTypes.SetOrientation](state, action) {\n    if (state.orientation === action.orientation) return state\n    return { ...state, orientation: action.orientation }\n  },\n  [ActionTypes.SetActivation](state, action) {\n    if (state.activation === action.activation) return state\n    return { ...state, activation: action.activation }\n  },\n  [ActionTypes.RegisterTab](state, action) {\n    if (state.tabs.includes(action.tab)) return state\n    return { ...state, tabs: [...state.tabs, action.tab] }\n  },\n  [ActionTypes.UnregisterTab](state, action) {\n    return { ...state, tabs: state.tabs.filter(tab => tab !== action.tab) }\n  },\n  [ActionTypes.RegisterPanel](state, action) {\n    if (state.panels.includes(action.panel)) return state\n    return { ...state, panels: [...state.panels, action.panel] }\n  },\n  [ActionTypes.UnregisterPanel](state, action) {\n    return { ...state, panels: state.panels.filter(panel => panel !== action.panel) }\n  },\n  [ActionTypes.ForceRerender](state) {\n    return { ...state }\n  },\n}\n\nlet TabsContext = createContext<\n  [StateDefinition, { change(index: number): void; dispatch: Dispatch<Actions> }] | null\n>(null)\nTabsContext.displayName = 'TabsContext'\n\nfunction useTabsContext(component: string) {\n  let context = useContext(TabsContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Tab.Group /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useTabsContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_TABS_TAG = Fragment\ninterface TabsRenderPropArg {\n  selectedIndex: number\n}\n\nfunction Tabs<TTag extends ElementType = typeof DEFAULT_TABS_TAG>(\n  props: Props<TTag, TabsRenderPropArg> & {\n    defaultIndex?: number\n    onChange?: (index: number) => void\n    selectedIndex?: number\n    vertical?: boolean\n    manual?: boolean\n  }\n) {\n  let {\n    defaultIndex = 0,\n    vertical = false,\n    manual = false,\n    onChange,\n    selectedIndex = null,\n    ...passThroughProps\n  } = props\n  const orientation = vertical ? 'vertical' : 'horizontal'\n  const activation = manual ? 'manual' : 'auto'\n\n  let [state, dispatch] = useReducer(stateReducer, {\n    selectedIndex: null,\n    tabs: [],\n    panels: [],\n    orientation,\n    activation,\n  } as StateDefinition)\n  let slot = useMemo(() => ({ selectedIndex: state.selectedIndex }), [state.selectedIndex])\n  let onChangeRef = useRef<(index: number) => void>(() => {})\n\n  useEffect(() => {\n    dispatch({ type: ActionTypes.SetOrientation, orientation })\n  }, [orientation])\n\n  useEffect(() => {\n    dispatch({ type: ActionTypes.SetActivation, activation })\n  }, [activation])\n\n  useEffect(() => {\n    if (typeof onChange === 'function') {\n      onChangeRef.current = onChange\n    }\n  }, [onChange])\n\n  useEffect(() => {\n    if (state.tabs.length <= 0) return\n    if (selectedIndex === null && state.selectedIndex !== null) return\n\n    let tabs = state.tabs.map(tab => tab.current).filter(Boolean) as HTMLElement[]\n    let focusableTabs = tabs.filter(tab => !tab.hasAttribute('disabled'))\n\n    let indexToSet = selectedIndex ?? defaultIndex\n\n    // Underflow\n    if (indexToSet < 0) {\n      dispatch({ type: ActionTypes.SetSelectedIndex, index: tabs.indexOf(focusableTabs[0]) })\n    }\n\n    // Overflow\n    else if (indexToSet > state.tabs.length) {\n      dispatch({\n        type: ActionTypes.SetSelectedIndex,\n        index: tabs.indexOf(focusableTabs[focusableTabs.length - 1]),\n      })\n    }\n\n    // Middle\n    else {\n      let before = tabs.slice(0, indexToSet)\n      let after = tabs.slice(indexToSet)\n\n      let next = [...after, ...before].find(tab => focusableTabs.includes(tab))\n      if (!next) return\n\n      dispatch({ type: ActionTypes.SetSelectedIndex, index: tabs.indexOf(next) })\n    }\n  }, [defaultIndex, selectedIndex, state.tabs, state.selectedIndex])\n\n  let lastChangedIndex = useRef(state.selectedIndex)\n  let providerBag = useMemo<ContextType<typeof TabsContext>>(\n    () => [\n      state,\n      {\n        dispatch,\n        change(index: number) {\n          if (lastChangedIndex.current !== index) onChangeRef.current(index)\n          lastChangedIndex.current = index\n\n          dispatch({ type: ActionTypes.SetSelectedIndex, index })\n        },\n      },\n    ],\n    [state, dispatch]\n  )\n\n  return (\n    <TabsContext.Provider value={providerBag}>\n      {render({\n        props: { ...passThroughProps },\n        slot,\n        defaultTag: DEFAULT_TABS_TAG,\n        name: 'Tabs',\n      })}\n    </TabsContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_LIST_TAG = 'div' as const\ninterface ListRenderPropArg {\n  selectedIndex: number\n}\ntype ListPropsWeControl = 'role' | 'aria-orientation'\n\nfunction List<TTag extends ElementType = typeof DEFAULT_LIST_TAG>(\n  props: Props<TTag, ListRenderPropArg, ListPropsWeControl> & {}\n) {\n  let [{ selectedIndex, orientation }] = useTabsContext([Tab.name, List.name].join('.'))\n\n  let slot = { selectedIndex }\n  let propsWeControl = {\n    role: 'tablist',\n    'aria-orientation': orientation,\n  }\n  let passThroughProps = props\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_LIST_TAG,\n    name: 'Tabs.List',\n  })\n}\n\n// ---\n\nlet DEFAULT_TAB_TAG = 'button' as const\ninterface TabRenderPropArg {\n  selected: boolean\n}\ntype TabPropsWeControl = 'id' | 'role' | 'type' | 'aria-controls' | 'aria-selected' | 'tabIndex'\n\nexport function Tab<TTag extends ElementType = typeof DEFAULT_TAB_TAG>(\n  props: Props<TTag, TabRenderPropArg, TabPropsWeControl>\n) {\n  let id = `headlessui-tabs-tab-${useId()}`\n\n  let [\n    { selectedIndex, tabs, panels, orientation, activation },\n    { dispatch, change },\n  ] = useTabsContext(Tab.name)\n\n  let internalTabRef = useRef<HTMLElement>(null)\n  let tabRef = useSyncRefs(internalTabRef, element => {\n    if (!element) return\n    dispatch({ type: ActionTypes.ForceRerender })\n  })\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterTab, tab: internalTabRef })\n    return () => dispatch({ type: ActionTypes.UnregisterTab, tab: internalTabRef })\n  }, [dispatch, internalTabRef])\n\n  let myIndex = tabs.indexOf(internalTabRef)\n  let selected = myIndex === selectedIndex\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLElement>) => {\n      let list = tabs.map(tab => tab.current).filter(Boolean) as HTMLElement[]\n\n      if (event.key === Keys.Space || event.key === Keys.Enter) {\n        event.preventDefault()\n        event.stopPropagation()\n\n        change(myIndex)\n        return\n      }\n\n      switch (event.key) {\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n\n          return focusIn(list, Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n\n          return focusIn(list, Focus.Last)\n      }\n\n      return match(orientation, {\n        vertical() {\n          if (event.key === Keys.ArrowUp) return focusIn(list, Focus.Previous | Focus.WrapAround)\n          if (event.key === Keys.ArrowDown) return focusIn(list, Focus.Next | Focus.WrapAround)\n          return\n        },\n        horizontal() {\n          if (event.key === Keys.ArrowLeft) return focusIn(list, Focus.Previous | Focus.WrapAround)\n          if (event.key === Keys.ArrowRight) return focusIn(list, Focus.Next | Focus.WrapAround)\n          return\n        },\n      })\n    },\n    [tabs, orientation, myIndex, change]\n  )\n\n  let handleFocus = useCallback(() => {\n    internalTabRef.current?.focus()\n  }, [internalTabRef])\n\n  let handleSelection = useCallback(() => {\n    internalTabRef.current?.focus()\n    change(myIndex)\n  }, [change, myIndex, internalTabRef])\n\n  let slot = useMemo(() => ({ selected }), [selected])\n  let propsWeControl = {\n    ref: tabRef,\n    onKeyDown: handleKeyDown,\n    onFocus: activation === 'manual' ? handleFocus : handleSelection,\n    onClick: handleSelection,\n    id,\n    role: 'tab',\n    type: useResolveButtonType(props, internalTabRef),\n    'aria-controls': panels[myIndex]?.current?.id,\n    'aria-selected': selected,\n    tabIndex: selected ? 0 : -1,\n  }\n  let passThroughProps = props\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_TAB_TAG,\n    name: 'Tabs.Tab',\n  })\n}\n\n// ---\n\nlet DEFAULT_PANELS_TAG = 'div' as const\ninterface PanelsRenderPropArg {\n  selectedIndex: number\n}\n\nfunction Panels<TTag extends ElementType = typeof DEFAULT_PANELS_TAG>(\n  props: Props<TTag, PanelsRenderPropArg>\n) {\n  let [{ selectedIndex }] = useTabsContext([Tab.name, Panels.name].join('.'))\n\n  let slot = useMemo(() => ({ selectedIndex }), [selectedIndex])\n\n  return render({\n    props,\n    slot,\n    defaultTag: DEFAULT_PANELS_TAG,\n    name: 'Tabs.Panels',\n  })\n}\n\n// ---\n\nlet DEFAULT_PANEL_TAG = 'div' as const\ninterface PanelRenderPropArg {\n  selected: boolean\n}\ntype PanelPropsWeControl = 'id' | 'role' | 'aria-labelledby' | 'tabIndex'\nlet PanelRenderFeatures = Features.RenderStrategy | Features.Static\n\nfunction Panel<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(\n  props: Props<TTag, PanelRenderPropArg, PanelPropsWeControl> &\n    PropsForFeatures<typeof PanelRenderFeatures>\n) {\n  let [{ selectedIndex, tabs, panels }, { dispatch }] = useTabsContext(\n    [Tab.name, Panel.name].join('.')\n  )\n\n  let id = `headlessui-tabs-panel-${useId()}`\n  let internalPanelRef = useRef<HTMLElement>(null)\n  let panelRef = useSyncRefs(internalPanelRef, element => {\n    if (!element) return\n    dispatch({ type: ActionTypes.ForceRerender })\n  })\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterPanel, panel: internalPanelRef })\n    return () => dispatch({ type: ActionTypes.UnregisterPanel, panel: internalPanelRef })\n  }, [dispatch, internalPanelRef])\n\n  let myIndex = panels.indexOf(internalPanelRef)\n  let selected = myIndex === selectedIndex\n\n  let slot = useMemo(() => ({ selected }), [selected])\n  let propsWeControl = {\n    ref: panelRef,\n    id,\n    role: 'tabpanel',\n    'aria-labelledby': tabs[myIndex]?.current?.id,\n    tabIndex: selected ? 0 : -1,\n  }\n\n  let passThroughProps = props\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_PANEL_TAG,\n    features: PanelRenderFeatures,\n    visible: selected,\n    name: 'Tabs.Panel',\n  })\n}\n\n// ---\n\nTab.Group = Tabs\nTab.List = List\nTab.Panels = Panels\nTab.Panel = Panel\n"],"names":["isOpen","onClose","useState","pop","setPop","hidePop","setHidePop","displayPop","setDisplayPop","useEffect","setTimeout","appear","show","as","Fragment","className","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","onClick","Icon","icon","crossIcon","partyPoppers","navigate","useNavigate","minted","setMinted","Details","review","ActionTypes","reducers","state","action","selectedIndex","index","orientation","activation","tabs","tab","panels","panel","TabsContext","createContext","useTabsContext","component","context","useContext","err","Error","stateReducer","match","DEFAULT_TABS_TAG","Tab","props","id","useId","dispatch","change","internalTabRef","useRef","tabRef","useSyncRefs","element","type","ForceRerender","useIsoMorphicEffect","myIndex","selected","handleKeyDown","useCallback","list","event","Keys","focusIn","Focus","vertical","horizontal","handleFocus","handleSelection","slot","useMemo","propsWeControl","ref","onKeyDown","onFocus","role","useResolveButtonType","tabIndex","passThroughProps","render","defaultTag","name","PanelRenderFeatures","Features","defaultIndex","manual","onChange","useReducer","onChangeRef","focusableTabs","indexToSet","before","after","next","lastChangedIndex","providerBag","value","List","Panels","Panel","internalPanelRef","panelRef","features","visible"],"sourceRoot":""}