{"version":3,"file":"static/js/171.532e7730.chunk.js","mappings":"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","sources":["components/Create/Loader.js","components/Create/EditSingle.js","views/EditSingle.js","../node_modules/@headlessui/react/src/components/description/description.tsx","../node_modules/@headlessui/react/src/components/label/label.tsx","../node_modules/@headlessui/react/src/components/switch/switch.tsx","../node_modules/nanoid/index.prod.js"],"sourcesContent":["import { loaderIcon } from '../../assets/icons';\nimport Icon from '../Utils/Icon';\n\nconst Loader = () => {\n  return (\n    <div className=\"fixed bottom-0 left-0 right-0 flex items-center justify-center top-9 bg-black/50\">\n      <Icon\n        icon={loaderIcon}\n        className=\"animate-spin-loader fill-white  w-[50px] h-[50px]\"\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { useState, useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport DataSection from './DataSection';\nimport PropertiesSection from './PropertiesSection';\nimport ExtrasSection from './ExtrasSection';\nimport { useNavigate } from 'react-router-dom';\nimport Loader from './Loader';\n\nconst initialValues = {\n  label: '',\n  description: '',\n  tags: [],\n  properties: [],\n  royalties: false,\n  royaltyPercentage: 30,\n  unlockable: false,\n  unlockableContent: '',\n  isCollaboration: false,\n  collaborationPartner: {\n    walletAddress: '',\n    percentage: 30,\n  },\n  isPhysical: true,\n};\n\nconst validationSchema = Yup.object().shape({\n  label: Yup.string().required('Label is required'),\n  description: Yup.string().required('Description is required'),\n  tags: Yup.array().of(Yup.string()),\n  properties: Yup.array().of(\n    Yup.object().shape({\n      id: Yup.string(),\n      type: Yup.string(),\n      value: Yup.string(),\n    })\n  ),\n  royalties: Yup.boolean(),\n  royaltyPercentage: Yup.number().when('royalties', {\n    is: true,\n    then: Yup.number().required('Required'),\n  }),\n  unlockable: Yup.boolean(),\n  unlockableContent:\n    // Yup.array()\n    // .of(\n    Yup.string()\n      // )\n      .when('unlockable', {\n        is: true,\n        // then: Yup.array().required('Required'),\n        then: Yup.string().required('Required'),\n      }),\n  isCollaboration: Yup.boolean(),\n  collaborationPartner:\n    //  Yup.array()\n    //   .of(\n    Yup.object()\n      // )\n      .when('isCollaboration', {\n        is: true,\n        // then: Yup.array().required('Required'),\n        then: Yup.object()\n          .shape({\n            walletAddress: Yup.string().required('Required'),\n            percentage: Yup.number().required('Required'),\n          })\n          .required('Required'),\n      }),\n  isPhysical: Yup.boolean(),\n});\n\nconst EditSingleForm = () => {\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const onSubmit = (values) => {\n    console.log(values);\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      navigate('/view-item');\n    }, 2000);\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit,\n  });\n\n  useEffect(() => {\n    formik.setValues({\n      label: 'The amazing art',\n      description:\n        'The Doge Pound is 10,000 art pieces carefully chosen by Professor Elon. A unique digital collection of diverse NFTs lying on Ethereum Blockchain. Each one is thoughtfully designed, specifically picked, and impeccably shaped.',\n      tags: ['NIKE', 'AIR MAX 97', 'SHOES'],\n      properties: [\n        {\n          id: '1',\n          type: 'Brand',\n          value: 'Nike',\n        },\n        {\n          id: '2',\n          type: 'Modal',\n          value: 'Air Max 97',\n        },\n        {\n          id: '3',\n          type: 'Size',\n          value: 'US 10.5',\n        },\n        {\n          id: '4',\n          type: 'Atomic Number',\n          value: 85,\n        },\n      ],\n      royalties: false,\n      royaltyPercentage: 30,\n      unlockable: true,\n      unlockableContent: 'https://www.privatelink.com',\n      isCollaboration: false,\n      collaborationPartner: {\n        walletAddress: '',\n        percentage: 30,\n      },\n      isPhysical: false,\n    });\n  }, []);\n\n  return (\n    <section className=\"space-y-12 \">\n      <DataSection formik={formik} index={1} edit />\n      <PropertiesSection formik={formik} index={2} edit />\n      <ExtrasSection formik={formik} index={3} edit />\n\n      <div className=\"flex justify-center w-full \">\n        <button\n          type=\"button\"\n          className=\"w-48 px-6 py-4 font-medium leading-4 text-white rounded-md bg-blue-dark font-madeOuterSans\"\n          onClick={formik.submitForm}\n        >\n          Update\n        </button>\n      </div>\n\n      {loading && <Loader />}\n    </section>\n  );\n};\n\nexport default EditSingleForm;\n","import Footer from '../components/Base/Footer';\nimport Header from '../components/Base/Header';\nimport EditSingleForm from '../components/Create/EditSingle';\n\nconst EditSingle = () => {\n  return (\n    <div className=\"relative w-full h-full\">\n      <Header />\n\n      <div className=\"flex justify-center\">\n        <div className=\"w-full max-w-sm px-4 my-40 md:max-w-lg lg:max-w-2xl xl:max-w-4xl\">\n          <h1 className=\"text-5xl font-madeOuterSans\">Edit Collectible</h1>\n\n          <EditSingleForm />\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default EditSingle;\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  ReactNode,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\n// ---\n\ninterface SharedData {\n  slot?: {}\n  name?: string\n  props?: {}\n}\n\nlet DescriptionContext = createContext<\n  ({ register(value: string): () => void } & SharedData) | null\n>(null)\n\nfunction useDescriptionContext() {\n  let context = useContext(DescriptionContext)\n  if (context === null) {\n    let err = new Error(\n      'You used a <Description /> component, but it is not inside a relevant parent.'\n    )\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDescriptionContext)\n    throw err\n  }\n  return context\n}\n\ninterface DescriptionProviderProps extends SharedData {\n  children: ReactNode\n}\n\nexport function useDescriptions(): [\n  string | undefined,\n  (props: DescriptionProviderProps) => JSX.Element\n] {\n  let [descriptionIds, setDescriptionIds] = useState<string[]>([])\n\n  return [\n    // The actual id's as string or undefined\n    descriptionIds.length > 0 ? descriptionIds.join(' ') : undefined,\n\n    // The provider component\n    useMemo(() => {\n      return function DescriptionProvider(props: DescriptionProviderProps) {\n        let register = useCallback((value: string) => {\n          setDescriptionIds(existing => [...existing, value])\n\n          return () =>\n            setDescriptionIds(existing => {\n              let clone = existing.slice()\n              let idx = clone.indexOf(value)\n              if (idx !== -1) clone.splice(idx, 1)\n              return clone\n            })\n        }, [])\n\n        let contextBag = useMemo(\n          () => ({ register, slot: props.slot, name: props.name, props: props.props }),\n          [register, props.slot, props.name, props.props]\n        )\n\n        return (\n          <DescriptionContext.Provider value={contextBag}>\n            {props.children}\n          </DescriptionContext.Provider>\n        )\n      }\n    }, [setDescriptionIds]),\n  ]\n}\n\n// ---\n\nlet DEFAULT_DESCRIPTION_TAG = 'p' as const\ninterface DescriptionRenderPropArg {}\ntype DescriptionPropsWeControl = 'id'\n\nexport function Description<TTag extends ElementType = typeof DEFAULT_DESCRIPTION_TAG>(\n  props: Props<TTag, DescriptionRenderPropArg, DescriptionPropsWeControl>\n) {\n  let context = useDescriptionContext()\n  let id = `headlessui-description-${useId()}`\n\n  useIsoMorphicEffect(() => context.register(id), [id, context.register])\n\n  let passThroughProps = props\n  let propsWeControl = { ...context.props, id }\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot: context.slot || {},\n    defaultTag: DEFAULT_DESCRIPTION_TAG,\n    name: context.name || 'Description',\n  })\n}\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  ReactNode,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\n// ---\n\ninterface SharedData {\n  slot?: {}\n  name?: string\n  props?: {}\n}\n\nlet LabelContext = createContext<({ register(value: string): () => void } & SharedData) | null>(\n  null\n)\n\nfunction useLabelContext() {\n  let context = useContext(LabelContext)\n  if (context === null) {\n    let err = new Error('You used a <Label /> component, but it is not inside a relevant parent.')\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useLabelContext)\n    throw err\n  }\n  return context\n}\n\ninterface LabelProviderProps extends SharedData {\n  children: ReactNode\n}\n\nexport function useLabels(): [string | undefined, (props: LabelProviderProps) => JSX.Element] {\n  let [labelIds, setLabelIds] = useState<string[]>([])\n\n  return [\n    // The actual id's as string or undefined.\n    labelIds.length > 0 ? labelIds.join(' ') : undefined,\n\n    // The provider component\n    useMemo(() => {\n      return function LabelProvider(props: LabelProviderProps) {\n        let register = useCallback((value: string) => {\n          setLabelIds(existing => [...existing, value])\n\n          return () =>\n            setLabelIds(existing => {\n              let clone = existing.slice()\n              let idx = clone.indexOf(value)\n              if (idx !== -1) clone.splice(idx, 1)\n              return clone\n            })\n        }, [])\n\n        let contextBag = useMemo(\n          () => ({ register, slot: props.slot, name: props.name, props: props.props }),\n          [register, props.slot, props.name, props.props]\n        )\n\n        return <LabelContext.Provider value={contextBag}>{props.children}</LabelContext.Provider>\n      }\n    }, [setLabelIds]),\n  ]\n}\n\n// ---\n\nlet DEFAULT_LABEL_TAG = 'label' as const\ninterface LabelRenderPropArg {}\ntype LabelPropsWeControl = 'id'\n\nexport function Label<TTag extends ElementType = typeof DEFAULT_LABEL_TAG>(\n  props: Props<TTag, LabelRenderPropArg, LabelPropsWeControl> & {\n    passive?: boolean\n  }\n) {\n  let { passive = false, ...passThroughProps } = props\n  let context = useLabelContext()\n  let id = `headlessui-label-${useId()}`\n\n  useIsoMorphicEffect(() => context.register(id), [id, context.register])\n\n  let propsWeControl = { ...context.props, id }\n\n  let allProps = { ...passThroughProps, ...propsWeControl }\n  // @ts-expect-error props are dynamic via context, some components will\n  //                  provide an onClick then we can delete it.\n  if (passive) delete allProps['onClick']\n\n  return render({\n    props: allProps,\n    slot: context.slot || {},\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: context.name || 'Label',\n  })\n}\n","import React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n\n  // Types\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  useRef,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\n\ninterface StateDefinition {\n  switch: HTMLButtonElement | null\n  setSwitch(element: HTMLButtonElement): void\n  labelledby: string | undefined\n  describedby: string | undefined\n}\n\nlet GroupContext = createContext<StateDefinition | null>(null)\nGroupContext.displayName = 'GroupContext'\n\n// ---\n\nlet DEFAULT_GROUP_TAG = Fragment\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_GROUP_TAG>(props: Props<TTag>) {\n  let [switchElement, setSwitchElement] = useState<HTMLButtonElement | null>(null)\n  let [labelledby, LabelProvider] = useLabels()\n  let [describedby, DescriptionProvider] = useDescriptions()\n\n  let context = useMemo<StateDefinition>(\n    () => ({ switch: switchElement, setSwitch: setSwitchElement, labelledby, describedby }),\n    [switchElement, setSwitchElement, labelledby, describedby]\n  )\n\n  return (\n    <DescriptionProvider name=\"Switch.Description\">\n      <LabelProvider\n        name=\"Switch.Label\"\n        props={{\n          onClick() {\n            if (!switchElement) return\n            switchElement.click()\n            switchElement.focus({ preventScroll: true })\n          },\n        }}\n      >\n        <GroupContext.Provider value={context}>\n          {render({ props, defaultTag: DEFAULT_GROUP_TAG, name: 'Switch.Group' })}\n        </GroupContext.Provider>\n      </LabelProvider>\n    </DescriptionProvider>\n  )\n}\n\n// ---\n\nlet DEFAULT_SWITCH_TAG = 'button' as const\ninterface SwitchRenderPropArg {\n  checked: boolean\n}\ntype SwitchPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-checked'\n  | 'aria-labelledby'\n  | 'aria-describedby'\n  | 'onClick'\n  | 'onKeyUp'\n  | 'onKeyPress'\n\nexport function Switch<TTag extends ElementType = typeof DEFAULT_SWITCH_TAG>(\n  props: Props<TTag, SwitchRenderPropArg, SwitchPropsWeControl | 'checked' | 'onChange'> & {\n    checked: boolean\n    onChange(checked: boolean): void\n  }\n) {\n  let { checked, onChange, ...passThroughProps } = props\n  let id = `headlessui-switch-${useId()}`\n  let groupContext = useContext(GroupContext)\n  let internalSwitchRef = useRef<HTMLButtonElement | null>(null)\n  let switchRef = useSyncRefs(\n    internalSwitchRef,\n    groupContext === null ? null : groupContext.setSwitch\n  )\n\n  let toggle = useCallback(() => onChange(!checked), [onChange, checked])\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      event.preventDefault()\n      toggle()\n    },\n    [toggle]\n  )\n  let handleKeyUp = useCallback(\n    (event: ReactKeyboardEvent<HTMLElement>) => {\n      if (event.key !== Keys.Tab) event.preventDefault()\n      if (event.key === Keys.Space) toggle()\n    },\n    [toggle]\n  )\n\n  // This is needed so that we can \"cancel\" the click event when we use the `Enter` key on a button.\n  let handleKeyPress = useCallback(\n    (event: ReactKeyboardEvent<HTMLElement>) => event.preventDefault(),\n    []\n  )\n\n  let slot = useMemo<SwitchRenderPropArg>(() => ({ checked }), [checked])\n  let propsWeControl = {\n    id,\n    ref: switchRef,\n    role: 'switch',\n    type: useResolveButtonType(props, internalSwitchRef),\n    tabIndex: 0,\n    'aria-checked': checked,\n    'aria-labelledby': groupContext?.labelledby,\n    'aria-describedby': groupContext?.describedby,\n    onClick: handleClick,\n    onKeyUp: handleKeyUp,\n    onKeyPress: handleKeyPress,\n  }\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_SWITCH_TAG,\n    name: 'Switch',\n  })\n}\n\n// ---\n\nSwitch.Group = Group\nSwitch.Label = Label\nSwitch.Description = Description\n","import { urlAlphabet } from './url-alphabet/index.js'\nif (false) {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, size, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * size) / alphabet.length)\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["className","icon","loaderIcon","initialValues","label","description","tags","properties","royalties","royaltyPercentage","unlockable","unlockableContent","isCollaboration","collaborationPartner","walletAddress","percentage","isPhysical","validationSchema","Yup","shape","required","of","id","type","value","when","is","then","useState","loading","setLoading","navigate","useNavigate","formik","useFormik","onSubmit","values","console","log","setTimeout","useEffect","setValues","DataSection","index","edit","PropertiesSection","ExtrasSection","onClick","submitForm","Loader","Header","Footer","DescriptionContext","createContext","useDescriptionContext","context","useContext","err","Error","useDescriptions","descriptionIds","setDescriptionIds","useMemo","props","register","useCallback","existing","clone","idx","contextBag","slot","name","Description","useId","useIsoMorphicEffect","passThroughProps","propsWeControl","render","defaultTag","LabelContext","useLabelContext","GroupContext","DEFAULT_GROUP_TAG","Switch","checked","onChange","groupContext","internalSwitchRef","useRef","switchRef","useSyncRefs","toggle","handleClick","isDisabledReactIssue7711","event","handleKeyUp","Keys","handleKeyPress","ref","role","useResolveButtonType","tabIndex","onKeyUp","onKeyPress","switchElement","setSwitchElement","labelIds","setLabelIds","useLabels","labelledby","LabelProvider","describedby","DescriptionProvider","switch","setSwitch","preventScroll","passive","allProps","nanoid","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase"],"sourceRoot":""}