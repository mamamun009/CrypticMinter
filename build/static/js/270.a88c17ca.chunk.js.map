{"version":3,"file":"static/js/270.a88c17ca.chunk.js","mappings":"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","sources":["components/EditProfile/ProfilePic.js","components/EditProfile/TextField.js","components/EditProfile/SelectField.js","components/EditProfile/TextEditor/Toolbar.js","components/EditProfile/TextEditor/index.js","components/EditProfile/LinksBox.js","components/EditProfile/EditForm.js","views/EditProfile.js"],"sourcesContent":["const maxPicSize = 10 * 1024 * 1024;\n\nconst ProfilePic = ({ profilePic, setProfilePic }) => {\n  return (\n    <div className=\"flex gap-8 \">\n      <div className=\"flex-shrink-0 w-[125px] h-[125px] overflow-hidden rounded-full\">\n        <img src={profilePic} alt=\"\" className=\"object-cover w-full h-full\" />\n      </div>\n      <div className=\"\">\n        <h4 className=\"font-medium text-gray-900\">Profile photo</h4>\n        <p className=\"mt-2 text-xs leading-5 text-gray-600 \">\n          We recommend an image\n          <br /> of at least 400x400. <br />\n          Gifs work too ðŸ™Œ\n        </p>\n        <button className=\"relative px-4 py-3 mt-4 overflow-hidden text-sm font-medium border border-gray-300 rounded-full\">\n          Upload\n          <input\n            type=\"file\"\n            className=\"absolute inset-0 opacity-0 cursor-pointer file:cursor-pointer\"\n            onChange={(e) => {\n              const file = e.target.files[0];\n              setProfilePic(file);\n            }}\n            accept=\"image/png, image/jpeg, image/jpg, image/gif\"\n            maxLength={maxPicSize}\n          />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePic;\n","import { lockIcon } from '../../assets/icons';\nimport Icon from '../Utils/Icon';\n\nconst TextField = ({\n  value,\n  onChange,\n  onBlur,\n  error,\n  label,\n  name,\n  placeholder,\n  type = 'text',\n  disabled,\n  lock,\n  icon,\n  ...props\n}) => {\n  return (\n    <div className=\"relative flex flex-col \">\n      {label && (\n        <label\n          htmlFor={name}\n          className=\"text-xs font-bold leading-3 text-gray-400/80  uppercase  mb-1.5\"\n        >\n          {label}\n        </label>\n      )}\n\n      <input\n        type={type}\n        id={name}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        disabled={disabled}\n        {...props}\n        className={`\n        mt-1.5 py-3 px-4 border-[0.5px]  border-black/20 text-gray-800 text-sm leading-6 \n        bg-gray-100/30 rounded-lg focus:outline-none focus:border-gray-500 focus:ring-0 transition \n        ${error ? '!border-red ' : ''}\n        ${disabled ? 'text-gray-600 border-black/10' : ''}\n          `}\n      />\n      {disabled && lock ? (\n        <div className=\"absolute bottom-3.5 right-3.5\">\n          <Icon icon={lockIcon} className=\"w-6 h-6 fill-black\" />\n        </div>\n      ) : null}\n\n      {!lock && icon ? (\n        <div className=\"absolute bottom-3.5 right-3.5\">\n          <Icon icon={icon} className=\"w-5 h-5 fill-gray-700\" />\n        </div>\n      ) : null}\n\n      {error ? (\n        <div className=\"absolute mt-1 text-sm origin-bottom-left -bottom-6 text-red\">\n          {error}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default TextField;\n","const SelectField = ({\n  value,\n  onChange,\n  onBlur,\n  error,\n  label,\n  name,\n  placeholder,\n  options,\n  ...props\n}) => {\n  return (\n    <div className=\"relative flex flex-col\">\n      {label && (\n        <label\n          htmlFor={name}\n          className=\"text-xs font-bold leading-3 text-gray-400/80  uppercase  mb-1.5\"\n        >\n          {label}\n        </label>\n      )}\n      <select\n        id={name}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        {...props}\n        className={`\n      mt-1.5 py-3 px-4 border-[0.5px]  border-black/20 text-gray-800 text-sm leading-6 \n      bg-gray-100/30 rounded-lg focus:outline-none focus:border-gray-500 focus:ring-0 transition\n      ${error ? '!border-red ' : ''}\n        `}\n      >\n        <option value=\"\" disabled>\n          Select\n        </option>\n        {options.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default SelectField;\n","import {\n  boldIcon,\n  emojiIcon,\n  italicIcon,\n  listIcon,\n  numListIcon,\n} from '../../../assets/icons';\nimport Icon from '../../Utils/Icon';\n\nconst Toolbar = ({ disabled }) => (\n  <div id=\"toolbar\" className=\"relative\">\n    {disabled && <div className=\"absolute inset-0 bg-gray-100/30\" />}\n    <span className=\" ql-formats\">\n      <button className=\"ql-emoji\" disabled={disabled}>\n        <Icon\n          icon={emojiIcon}\n          className=\"w-6 h-6 fill-gray-600 hover:fill-gray-700\"\n        />\n      </button>\n      <button className=\"ql-bold\" disabled={disabled}>\n        <Icon\n          icon={boldIcon}\n          className=\"w-6 h-6 stroke-gray-500 hover:stoke-gray-700\"\n        />\n      </button>\n      <button className=\"ql-italic\" disabled={disabled}>\n        <Icon\n          icon={italicIcon}\n          className=\"w-6 h-6 stroke-gray-500 hover:stoke-gray-700\"\n        />\n      </button>\n      <button className=\"ql-list\" value=\"ordered\" disabled={disabled}>\n        <Icon\n          icon={numListIcon}\n          className=\"w-6 h-6 stroke-gray-500 hover:stoke-gray-700\"\n        />\n      </button>\n      <button className=\"ql-list\" value=\"bullet\" disabled={disabled}>\n        <Icon\n          icon={listIcon}\n          className=\"w-6 h-6 stroke-gray-500 hover:stoke-gray-700\"\n        />\n      </button>\n    </span>\n  </div>\n);\n\nexport default Toolbar;\n","import { useEffect } from 'react';\nimport { useQuill } from 'react-quilljs';\nimport 'quill/dist/quill.snow.css'; // Add css for snow theme\nimport 'quill-emoji';\nimport 'quill-emoji/dist/quill-emoji.css';\nimport Toolbar from './Toolbar';\nimport { lockIcon } from '../../../assets/icons';\nimport Icon from '../../Utils/Icon';\n\nconst TextEditor = ({\n  error,\n  name,\n  label,\n  placeholder,\n  onChange,\n  value,\n  disabled,\n}) => {\n  const modules = {\n    toolbar: {\n      container: '#toolbar',\n      handlers: { emoji: function () {} },\n    },\n    'emoji-toolbar': true,\n    'emoji-textarea': false,\n    'emoji-shortname': true,\n  };\n\n  const formats = ['emoji', 'bold', 'italic', 'underline', 'list', 'bullet'];\n\n  const { quillRef, quill } = useQuill({\n    theme: 'snow',\n    modules,\n    formats,\n    placeholder,\n    readOnly: disabled,\n  });\n\n  useEffect(() => {\n    if (quill) {\n      quill.clipboard.dangerouslyPasteHTML(value ? value : '');\n      quill.on('text-change', (delta, oldDelta, source) => {\n        onChange?.(quill.root.innerHTML);\n      });\n    }\n  }, [quill]);\n\n  return (\n    <div className=\"relative flex flex-col \">\n      <label\n        htmlFor={name}\n        className=\"text-xs font-bold leading-3 text-gray-400/80  uppercase  mb-1.5\"\n      >\n        {label}\n      </label>\n\n      <div\n        className={`mt-1.5 border-[0.5px]  border-black/20 text-gray-800 text-sm leading-6 \n    bg-gray-100/30 rounded-lg focus:outline-none focus:border-gray-500 focus:ring-0\n    ${disabled ? 'text-gray-600 border-black/10' : ''}\n    `}\n      >\n        <div className=\"mb-2 h-25\">\n          <div ref={quillRef}></div>\n        </div>\n        <Toolbar disabled={disabled} />\n      </div>\n\n      {disabled ? (\n        <div className=\"absolute bottom-13 right-3.5\">\n          <Icon icon={lockIcon} className=\"w-6 h-6 fill-black\" />\n        </div>\n      ) : null}\n\n      {error ? (\n        <div className=\"absolute mt-1 text-sm origin-bottom-left -bottom-6 text-red\">\n          {error}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default TextEditor;\n","import {\n  profileDiscordIcon,\n  profileInstaIcon,\n  profileSharpWebIcon,\n  profileTelegramIcon,\n  profileTwitterIcon,\n} from '../../assets/icons';\nimport Icon from '../Utils/Icon';\n\nconst LinksBox = ({ links, formik, ...props }) => {\n  return (\n    <div className=\"relative flex flex-col \">\n      <label className=\"text-xs font-bold leading-3 text-gray-400/80 uppercase  mb-1.5\">\n        Links\n      </label>\n\n      <div className=\"rounded-lg border-[0.5px] border-black/20 mt-1.5 divide-y divide-black/20\">\n        <div className=\"flex divide-x divide-black/20 \">\n          <div className=\"flex items-center justify-center px-3.5\">\n            <Icon\n              icon={profileDiscordIcon}\n              className=\"w-6 h-6 fill-gray-500/80\"\n            />\n          </div>\n          <input\n            name=\"links.discord\"\n            placeholder=\"https://discord.gg/\"\n            {...formik.getFieldProps('links.discord')}\n            className=\"w-full px-4 py-3 text-sm leading-5 text-gray-800 rounded-tr-lg placeholder:text-gray-500/80 focus:outline-none focus:ring-0\"\n          />\n        </div>\n\n        <div className=\"flex divide-x divide-black/20 \">\n          <div className=\"flex items-center justify-center px-3.5\">\n            <Icon\n              icon={profileInstaIcon}\n              className=\"w-6 h-6 fill-gray-500/80\"\n            />\n          </div>\n          <input\n            name=\"links.instagram\"\n            placeholder=\"https://instagram.com/\"\n            {...formik.getFieldProps('links.instagram')}\n            className=\"w-full px-4 py-3 text-sm leading-5 text-gray-800 placeholder:text-gray-500/80 focus:outline-none focus:ring-0\"\n          />\n        </div>\n\n        <div className=\"flex divide-x divide-black/20 \">\n          <div className=\"flex items-center justify-center px-3.5\">\n            <Icon\n              icon={profileTwitterIcon}\n              className=\"w-6 h-6 fill-gray-500/80\"\n            />\n          </div>\n          <input\n            name=\"links.twitter\"\n            placeholder=\"https://twitter.com/\"\n            {...formik.getFieldProps('links.twitter')}\n            className=\"w-full px-4 py-3 text-sm leading-5 text-gray-800 placeholder:text-gray-500/80 focus:outline-none focus:ring-0\"\n          />\n        </div>\n\n        <div className=\"flex divide-x divide-black/20 \">\n          <div className=\"flex items-center justify-center px-3.5\">\n            <Icon\n              icon={profileTelegramIcon}\n              className=\"w-6 h-6 fill-gray-500/80\"\n            />\n          </div>\n          <input\n            name=\"links.telegram\"\n            placeholder=\"https://t.me/\"\n            {...formik.getFieldProps('links.telegram')}\n            className=\"w-full px-4 py-3 text-sm leading-5 text-gray-800 placeholder:text-gray-500/80 focus:outline-none focus:ring-0\"\n          />\n        </div>\n\n        <div className=\"flex divide-x divide-black/20 \">\n          <div className=\"flex items-center justify-center px-3.5\">\n            <Icon\n              icon={profileSharpWebIcon}\n              className=\"w-6 h-6 fill-gray-500/80\"\n            />\n          </div>\n          <input\n            name=\"links.site\"\n            placeholder=\"https://www.example.com\"\n            {...formik.getFieldProps('links.site')}\n            className=\"w-full px-4 py-3 text-sm leading-5 text-gray-800 rounded-br-lg placeholder:text-gray-500/80 focus:outline-none focus:ring-0\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LinksBox;\n","import ProfilePic from './ProfilePic';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { checkIcon, notificationImage, searchIcon } from '../../assets/icons';\nimport TextField from './TextField';\nimport SelectField from './SelectField';\nimport TextEditor from './TextEditor';\nimport LinksBox from './LinksBox';\nimport Icon from '../Utils/Icon';\nimport { useNavigate } from 'react-router-dom';\n\nconst initialValues = {\n  profilePic: null,\n  name: '',\n  address: '',\n  street1: '',\n  street2: '',\n  city: '',\n  state: '',\n  postalCode: '',\n  country: '',\n  phone: '',\n  username: '',\n  email: '',\n  bio: '',\n  links: {\n    discord: '',\n    telegram: '',\n    twitter: '',\n    instagram: '',\n    site: '',\n  },\n};\n\nconst validationSchema = Yup.object().shape({\n  profileImage: Yup.mixed(),\n  name: Yup.string(),\n  address: Yup.string(),\n  street1: Yup.string(),\n  street2: Yup.string(),\n  city: Yup.string(),\n  state: Yup.string(),\n  postalCode: Yup.string(),\n  country: Yup.string(),\n  phone: Yup.string(),\n  username: Yup.string(),\n  email: Yup.string(),\n  bio: Yup.string(),\n  links: Yup.object().shape({\n    discord: Yup.string(),\n    telegram: Yup.string(),\n    twitter: Yup.string(),\n    instagram: Yup.string(),\n    site: Yup.string(),\n  }),\n});\n\nconst EditForm = () => {\n  const navigate = useNavigate();\n\n  const onSubmit = (values) => {\n    console.log(values);\n    navigate('/profile');\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit,\n  });\n\n  return (\n    <div className=\"grid grid-cols-2 gap-20 mt-20 mb-14\">\n      <div>\n        <ProfilePic\n          profilePic={\n            (formik.values.profilePic &&\n              URL.createObjectURL(formik.values.profilePic)) ||\n            notificationImage\n          }\n          setProfilePic={(profilePic) =>\n            formik.setFieldValue('profilePic', profilePic)\n          }\n        />\n\n        <div className=\"mt-32\">\n          <h3 className=\"font-medium\">Shipping Address</h3>\n          <div className=\"mt-8\">\n            <TextField\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"John Appleseed\"\n              {...formik.getFieldProps('name')}\n              error={formik.touched.name && formik.errors.name}\n            />\n          </div>\n          <div className=\"mt-8\">\n            <TextField\n              label=\"Address\"\n              name=\"address\"\n              placeholder=\"Search for an address\"\n              {...formik.getFieldProps('address')}\n              error={formik.touched.address && formik.errors.address}\n              icon={searchIcon}\n            />\n            <TextField\n              name=\"street1\"\n              placeholder=\"Street 1\"\n              {...formik.getFieldProps('street1')}\n              error={formik.touched.street1 && formik.errors.street1}\n            />\n            <TextField\n              name=\"street2\"\n              placeholder=\"Street 2\"\n              {...formik.getFieldProps('street2')}\n              error={formik.touched.street2 && formik.errors.street2}\n            />\n            <TextField\n              name=\"city\"\n              placeholder=\"City\"\n              {...formik.getFieldProps('city')}\n              error={formik.touched.city && formik.errors.city}\n            />\n            <div className=\"grid grid-cols-10 gap-1.5\">\n              <div className=\"col-span-6\">\n                <SelectField\n                  name=\"state\"\n                  placeholder=\"State/Region\"\n                  {...formik.getFieldProps('state')}\n                  error={formik.touched.state && formik.errors.state}\n                  options={[\n                    { value: 'AL', label: 'Alabama' },\n                    { value: 'AK', label: 'Alaska' },\n                    { value: 'AZ', label: 'Arizona' },\n                    { value: 'AR', label: 'Arkansas' },\n                    { value: 'CA', label: 'California' },\n                    { value: 'CO', label: 'Colorado' },\n                    { value: 'CT', label: 'Connecticut' },\n                    { value: 'DE', label: 'Delaware' },\n                  ]}\n                />\n              </div>\n              <div className=\"col-span-4\">\n                <TextField\n                  name=\"postalCode\"\n                  placeholder=\"Postal Code\"\n                  {...formik.getFieldProps('postalCode')}\n                  error={formik.touched.postalCode && formik.errors.postalCode}\n                />\n              </div>\n            </div>\n            <div className=\"grid grid-cols-10 gap-1.5\">\n              <div className=\"col-span-6\">\n                <SelectField\n                  name=\"country\"\n                  placeholder=\"Select a Country\"\n                  {...formik.getFieldProps('country')}\n                  error={formik.touched.country && formik.errors.country}\n                  options={[\n                    { value: 'US', label: 'United States' },\n                    { value: 'CA', label: 'Canada' },\n                  ]}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-8\">\n            <TextField\n              label=\"Phone Number\"\n              name=\"phone\"\n              placeholder=\"631-039-9039\"\n              {...formik.getFieldProps('phone')}\n              error={formik.touched.phone && formik.errors.phone}\n            />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <h3 className=\"font-medium\">Account info</h3>\n          <div className=\"mt-8\">\n            <TextField\n              label=\"Username\"\n              name=\"username\"\n              placeholder=\"Enter your username\"\n              {...formik.getFieldProps('username')}\n              error={formik.touched.username && formik.errors.username}\n            />\n          </div>\n          <div className=\"mt-8\">\n            <TextField\n              label=\"Email\"\n              name=\"email\"\n              placeholder=\"Enter your email address\"\n              {...formik.getFieldProps('email')}\n              error={formik.touched.email && formik.errors.email}\n            />\n          </div>\n          <div className=\"mt-8\">\n            <TextEditor\n              label=\"Bio\"\n              name=\"bio\"\n              placeholder=\"e. g. â€œFirst wore by MJ in his 1997 playoffs...\"\n              {...formik.getFieldProps('bio')}\n              error={formik.touched.bio && formik.errors.bio}\n            />\n          </div>\n        </div>\n\n        <div>\n          <h3 className=\"mt-10 font-medium\">Social Accounts</h3>\n          <div className=\"mt-8\">\n            <LinksBox formik={formik} links={formik.values.links} />\n          </div>\n        </div>\n\n        <div className=\"mt-8\">\n          <button\n            type=\"button\"\n            className=\"w-full max-w-[208px] border-2 p-4 rounded-full flex items-center gap-4 font-medium text-sm leading-4 text-gray-600/80 fill-gray-600/80\"\n          >\n            <Icon icon={checkIcon} className=\"w-4 h-4\" />\n            Verify Your Account\n          </button>\n        </div>\n\n        <div className=\"mt-10\">\n          <p className=\"text-sm leading-6 text-gray-500\">\n            To update your settings you should sign message through your wallet.\n            Click 'Update profile' then sign the message\n          </p>\n        </div>\n\n        <div className=\"w-full h-px my-10 bg-gray-300\" />\n\n        <button\n          type=\"button\"\n          onClick={formik.submitForm}\n          className=\"px-6 py-4 font-medium leading-4 text-white rounded-md bg-blue-light font-madeOuterSans\"\n        >\n          Update Profile\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EditForm;\n","import Header from '../components/Base/Header';\nimport EditForm from '../components/EditProfile/EditForm';\n\nconst EditProfile = () => {\n  return (\n    <div className=\"relative w-full h-full\">\n      <Header />\n\n      <section className=\"flex justify-center flex-1 my-32\">\n        <div className=\"w-full max-w-sm px-4 py-6 md:max-w-2xl lg:max-w-3xl xl:max-w-5xl\">\n          <h1 className=\"text-5xl leading-[56px] font-madeOuterSans text-gray-900\">\n            Edit profile\n          </h1>\n          <p className=\"mt-4 text-sm text-gray-500\">\n            You can set preferred display name, create{' '}\n            <span className=\"text-gray-900\">your profile URL</span> and manage\n            other personal settings.\n          </p>\n\n          <EditForm />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default EditProfile;\n"],"names":["profilePic","setProfilePic","className","src","alt","type","onChange","e","file","target","files","accept","maxLength","value","onBlur","error","label","name","placeholder","disabled","lock","icon","props","htmlFor","id","Icon","lockIcon","options","map","option","emojiIcon","boldIcon","italicIcon","numListIcon","listIcon","useQuill","theme","modules","toolbar","container","handlers","emoji","formats","readOnly","quillRef","quill","useEffect","clipboard","dangerouslyPasteHTML","on","delta","oldDelta","source","root","innerHTML","ref","links","formik","profileDiscordIcon","getFieldProps","profileInstaIcon","profileTwitterIcon","profileTelegramIcon","profileSharpWebIcon","initialValues","address","street1","street2","city","state","postalCode","country","phone","username","email","bio","discord","telegram","twitter","instagram","site","validationSchema","Yup","shape","profileImage","navigate","useNavigate","useFormik","onSubmit","values","console","log","URL","createObjectURL","notificationImage","setFieldValue","touched","errors","searchIcon","checkIcon","onClick","submitForm","Header"],"sourceRoot":""}