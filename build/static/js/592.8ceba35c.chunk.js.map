{"version":3,"file":"static/js/592.8ceba35c.chunk.js","mappings":"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","sources":["components/Base/Footer/index.js","components/Support/Tabs/FaqDisclosure.js","components/Support/Tabs/FaqTab.js","components/Support/Tabs/index.js","views/Support.js","../node_modules/@headlessui/react/src/components/tabs/tabs.tsx"],"sourcesContent":["import { logoInner, logoOuter } from '../../../assets/icons';\nimport Icon from '../../Utils/Icon';\nimport { useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  const navigate = useNavigate();\n\n  return (\n    <footer className=\"flex justify-center w-full border-t border-gray-100 bg-gray-100/30\">\n      <div className=\"w-full max-w-xs px-8 lg:max-w-6xl md:max-w-xl \">\n        {/* upper */}\n        <div className=\"flex flex-wrap py-12 gap-y-12\">\n          {/* left */}\n          <div className=\"flex items-center justify-start w-full lg:w-1/2\">\n            {/* icon */}\n            <div className=\"relative flex items-center justify-center \">\n              <Icon\n                icon={logoInner}\n                className=\"absolute -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2\"\n              />\n              <Icon icon={logoOuter} className=\"animate-spin-slow \" />\n            </div>\n            {/* tagline */}\n            <h2 className=\"ml-6 text-2xl text-gray-900 lg:mr-20 md:ml-10 \">\n              The New Sneaker Economy.\n            </h2>\n          </div>\n          {/* left */}\n          <div className=\"flex w-full lg:w-1/2 \">\n            {/* market place links */}\n            <div className=\"w-full md:w-1/2\">\n              <h4 className=\"font-medium text-text-gray-900\">Marketplace</h4>\n              <div className=\"flex flex-col mt-10 space-y-6 text-sm font-medium leading-4 text-gray-600\">\n                <button\n                  className=\"text-left \"\n                  onClick={() => navigate('/discover')}\n                >\n                  Discover\n                </button>\n                <button\n                  className=\"text-left \"\n                  onClick={() => navigate('/activity')}\n                >\n                  Activity\n                </button>\n                <button\n                  className=\"text-left \"\n                  onClick={() => navigate('/discover')}\n                >\n                  Mint DUNKS\n                </button>\n              </div>\n            </div>\n\n            {/* Support links */}\n            <div className=\"w-full md:w-1/2\">\n              <h4 className=\"font-medium text-text-gray-900\">Support</h4>\n              <div className=\"flex flex-col mt-10 space-y-6 text-sm font-medium leading-4 text-gray-600\">\n                <button className=\"text-left \">Privacy Policy</button>\n                <button className=\"text-left \">Terms of Service</button>\n                <button className=\"text-left \">Contact Us</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* divider */}\n        <div className=\"w-full h-px bg-gray-300\" />\n\n        {/* lower */}\n        <div className=\"flex flex-col-reverse justify-between py-8 text-xs leading-5 md:flex-row\">\n          {/* left */}\n          <span className=\"text-gray-500\">© 2021 - DunkSwap ,Inc</span>\n\n          {/* right */}\n          <div className=\"flex\">\n            <p className=\"text-gray-900 \">\n              We use 🍪 for better service. Please\n            </p>\n            <button className=\"ml-1 font-semibold text-blue-light\">\n              Allow\n            </button>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { Disclosure, Transition } from '@headlessui/react';\nimport { chevronDownIcon } from '../../../assets/icons';\nimport Icon from '../../Utils/Icon';\n\nconst FaqDisclosure = ({ title, children, defaultOpen }) => {\n  return (\n    <Disclosure\n      as=\"div\"\n      className=\" overflow-y-auto overflow-x-hidden border-t mb-9 max-h-[228px]  scrollbar-thin\"\n      defaultOpen={defaultOpen}\n    >\n      {({ open }) => (\n        <div className=\"mr-2.5 pt-8\">\n          <Disclosure.Button\n            className={`flex items-center justify-between w-full `}\n          >\n            <span className=\"font-medium text-gray-900\">{title}</span>\n\n            <span className={`flex items-center justify-center  `}>\n              <Icon\n                icon={chevronDownIcon}\n                className={`w-6 h-6 fill-gray-600 transition ${\n                  // flip the chevron if the disclosure is open\n                  open ? 'rotate-180' : ''\n                }`}\n              />\n            </span>\n          </Disclosure.Button>\n\n          <Transition\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0\"\n            enterTo=\"transform scale-100 opacity-100\"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100\"\n            leaveTo=\"transform scale-95 opacity-0\"\n          >\n            <Disclosure.Panel className=\"relative w-full mt-10 text-gray-500 \">\n              {children}\n            </Disclosure.Panel>\n          </Transition>\n        </div>\n      )}\n    </Disclosure>\n  );\n};\n\nexport default FaqDisclosure;\n","import FaqDisclosure from './FaqDisclosure';\n\nconst FaqTab = () => {\n  return (\n    <div>\n      <FaqDisclosure title=\"How does it work\" defaultOpen>\n        The Stacks series of products: Stacks: Landing Page Kit, Stacks:\n        Portfolio Kit, Stacks: eCommerce Kit. \"Stacks is a production-ready\n        library of stackable content blocks built in React Native. Mix-and-match\n        dozens of responsive elements to quickly configure your favorite landing\n        page layouts or hit the ground running with 10 pre-built templates, all\n        in light or dark mode.\" \"Stacks is a production-ready library of\n        stackable content blocks built in React Native.\n        <br />\n        <br />\n        Mix-and-match dozens of responsive elements to quickly configure your\n        favorite landing page layouts or hit the ground running with 10\n        pre-built templates, all in light or dark mode.\"\n      </FaqDisclosure>\n      <FaqDisclosure title=\"How to start with Stacks\">\n        The Stacks series of products: Stacks: Landing Page Kit, Stacks:\n        Portfolio Kit, Stacks: eCommerce Kit. \"Stacks is a production-ready\n        library of stackable content blocks built in React Native. Mix-and-match\n        dozens of responsive elements to quickly configure your favorite landing\n        page layouts or hit the ground running with 10 pre-built templates, all\n        in light or dark mode.\" \"Stacks is a production-ready library of\n        stackable content blocks built in React Native.\n        <br />\n        <br />\n        Mix-and-match dozens of responsive elements to quickly configure your\n        favorite landing page layouts or hit the ground running with 10\n        pre-built templates, all in light or dark mode.\"\n      </FaqDisclosure>\n      <FaqDisclosure title=\"Dose it suppport Dark Mode\">\n        The Stacks series of products: Stacks: Landing Page Kit, Stacks:\n        Portfolio Kit, Stacks: eCommerce Kit. \"Stacks is a production-ready\n        library of stackable content blocks built in React Native. Mix-and-match\n        dozens of responsive elements to quickly configure your favorite landing\n        page layouts or hit the ground running with 10 pre-built templates, all\n        in light or dark mode.\" \"Stacks is a production-ready library of\n        stackable content blocks built in React Native.\n        <br />\n        <br />\n        Mix-and-match dozens of responsive elements to quickly configure your\n        favorite landing page layouts or hit the ground running with 10\n        pre-built templates, all in light or dark mode.\"\n      </FaqDisclosure>\n      <FaqDisclosure title=\"Does it support Auto-Layout\">\n        The Stacks series of products: Stacks: Landing Page Kit, Stacks:\n        Portfolio Kit, Stacks: eCommerce Kit. \"Stacks is a production-ready\n        library of stackable content blocks built in React Native. Mix-and-match\n        dozens of responsive elements to quickly configure your favorite landing\n        page layouts or hit the ground running with 10 pre-built templates, all\n        in light or dark mode.\" \"Stacks is a production-ready library of\n        stackable content blocks built in React Native.\n        <br />\n        <br />\n        Mix-and-match dozens of responsive elements to quickly configure your\n        favorite landing page layouts or hit the ground running with 10\n        pre-built templates, all in light or dark mode.\"\n      </FaqDisclosure>\n      <FaqDisclosure title=\"What is Stacks Design System\">\n        The Stacks series of products: Stacks: Landing Page Kit, Stacks:\n        Portfolio Kit, Stacks: eCommerce Kit. \"Stacks is a production-ready\n        library of stackable content blocks built in React Native. Mix-and-match\n        dozens of responsive elements to quickly configure your favorite landing\n        page layouts or hit the ground running with 10 pre-built templates, all\n        in light or dark mode.\" \"Stacks is a production-ready library of\n        stackable content blocks built in React Native.\n        <br />\n        <br />\n        Mix-and-match dozens of responsive elements to quickly configure your\n        favorite landing page layouts or hit the ground running with 10\n        pre-built templates, all in light or dark mode.\"\n      </FaqDisclosure>\n    </div>\n  );\n};\n\nexport default FaqTab;\n","import { Fragment } from 'react';\nimport { Tab } from '@headlessui/react';\nimport Icon from '../../Utils/Icon';\nimport {\n  docsIcon,\n  faqIcon,\n  helpdeskIcon,\n  resourcesIcon,\n} from '../../../assets/icons';\nimport FaqTab from './FaqTab';\n\nconst Tabs = () => {\n  return (\n    <Tab.Group as=\"div\" className=\"grid grid-cols-12 mt-20\">\n      <div className=\"col-span-4\">\n        <Tab.List className=\"flex flex-col items-start gap-10\">\n          <Tab as={Fragment}>\n            {({ selected }) => (\n              <button\n                className={`flex items-center gap-4 font-semibold text-sm ${\n                  selected ? 'text-gray-900' : ' text-gray-500'\n                }`}\n              >\n                <Icon icon={faqIcon} /> FAQs\n              </button>\n            )}\n          </Tab>\n          <Tab as={Fragment}>\n            {({ selected }) => (\n              <button\n                className={`flex items-center gap-4 font-semibold text-sm ${\n                  selected ? 'text-gray-900' : ' text-gray-500'\n                }`}\n              >\n                <Icon icon={docsIcon} /> Docs\n              </button>\n            )}\n          </Tab>\n          <Tab as={Fragment}>\n            {({ selected }) => (\n              <button\n                className={`flex items-center gap-4 font-semibold text-sm ${\n                  selected ? 'text-gray-900' : ' text-gray-500'\n                }`}\n              >\n                <Icon icon={resourcesIcon} /> Resources\n              </button>\n            )}\n          </Tab>\n          <Tab as={Fragment} disabled>\n            {({ selected }) => (\n              <button\n                className={`flex items-center gap-4 font-semibold text-sm ${\n                  selected ? 'text-gray-900' : ' text-gray-500'\n                }`}\n              >\n                <Icon icon={helpdeskIcon} /> Helpdesk{' '}\n                <span className=\"font-light leading-4 text-gray-600 text-xxs\">\n                  Coming Soon\n                </span>\n              </button>\n            )}\n          </Tab>\n        </Tab.List>\n      </div>\n      <Tab.Panels className=\"col-span-8\">\n        <Tab.Panel>\n          <FaqTab />\n        </Tab.Panel>\n        <Tab.Panel>\n          <FaqTab />\n        </Tab.Panel>\n        <Tab.Panel>\n          <FaqTab />\n        </Tab.Panel>\n        <Tab.Panel>\n          <FaqTab />\n        </Tab.Panel>\n      </Tab.Panels>\n    </Tab.Group>\n  );\n};\n\nexport default Tabs;\n","import Footer from '../components/Base/Footer';\nimport Header from '../components/Base/Header';\nimport Tabs from '../components/Support/Tabs';\n\nconst Activity = () => {\n  return (\n    <div className=\"relative w-full h-full\">\n      <Header />\n\n      <div className=\"flex justify-center\">\n        <div className=\"relative w-full max-w-sm px-4 my-40 md:max-w-lg lg:max-w-4xl xl:max-w-7xl\">\n          <h1 className=\"font-madeOuterSans text-5xl leading-[56px] text-gray-900\">\n            Support\n          </h1>\n          <p className=\"mt-5 \">\n            Please go through our FAQs and documenation to aquaint yourself with\n            the platform.\n            <br />\n            <button className=\"underline text-blue-light \">\n              {' '}\n              Contact us\n            </button>{' '}\n            if you require further assistance.\n          </p>\n\n          <Tabs />\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Activity;\n","import React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n  useEffect,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n  KeyboardEvent as ReactKeyboardEvent,\n  Dispatch,\n  ContextType,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { render, Features, PropsForFeatures } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\nimport { Keys } from '../../components/keyboard'\nimport { focusIn, Focus } from '../../utils/focus-management'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\ninterface StateDefinition {\n  selectedIndex: number | null\n\n  orientation: 'horizontal' | 'vertical'\n  activation: 'auto' | 'manual'\n\n  tabs: MutableRefObject<HTMLElement | null>[]\n  panels: MutableRefObject<HTMLElement | null>[]\n}\n\nenum ActionTypes {\n  SetSelectedIndex,\n  SetOrientation,\n  SetActivation,\n\n  RegisterTab,\n  UnregisterTab,\n\n  RegisterPanel,\n  UnregisterPanel,\n\n  ForceRerender,\n}\n\ntype Actions =\n  | { type: ActionTypes.SetSelectedIndex; index: number }\n  | { type: ActionTypes.SetOrientation; orientation: StateDefinition['orientation'] }\n  | { type: ActionTypes.SetActivation; activation: StateDefinition['activation'] }\n  | { type: ActionTypes.RegisterTab; tab: MutableRefObject<HTMLElement | null> }\n  | { type: ActionTypes.UnregisterTab; tab: MutableRefObject<HTMLElement | null> }\n  | { type: ActionTypes.RegisterPanel; panel: MutableRefObject<HTMLElement | null> }\n  | { type: ActionTypes.UnregisterPanel; panel: MutableRefObject<HTMLElement | null> }\n  | { type: ActionTypes.ForceRerender }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.SetSelectedIndex](state, action) {\n    if (state.selectedIndex === action.index) return state\n    return { ...state, selectedIndex: action.index }\n  },\n  [ActionTypes.SetOrientation](state, action) {\n    if (state.orientation === action.orientation) return state\n    return { ...state, orientation: action.orientation }\n  },\n  [ActionTypes.SetActivation](state, action) {\n    if (state.activation === action.activation) return state\n    return { ...state, activation: action.activation }\n  },\n  [ActionTypes.RegisterTab](state, action) {\n    if (state.tabs.includes(action.tab)) return state\n    return { ...state, tabs: [...state.tabs, action.tab] }\n  },\n  [ActionTypes.UnregisterTab](state, action) {\n    return { ...state, tabs: state.tabs.filter(tab => tab !== action.tab) }\n  },\n  [ActionTypes.RegisterPanel](state, action) {\n    if (state.panels.includes(action.panel)) return state\n    return { ...state, panels: [...state.panels, action.panel] }\n  },\n  [ActionTypes.UnregisterPanel](state, action) {\n    return { ...state, panels: state.panels.filter(panel => panel !== action.panel) }\n  },\n  [ActionTypes.ForceRerender](state) {\n    return { ...state }\n  },\n}\n\nlet TabsContext = createContext<\n  [StateDefinition, { change(index: number): void; dispatch: Dispatch<Actions> }] | null\n>(null)\nTabsContext.displayName = 'TabsContext'\n\nfunction useTabsContext(component: string) {\n  let context = useContext(TabsContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Tab.Group /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useTabsContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_TABS_TAG = Fragment\ninterface TabsRenderPropArg {\n  selectedIndex: number\n}\n\nfunction Tabs<TTag extends ElementType = typeof DEFAULT_TABS_TAG>(\n  props: Props<TTag, TabsRenderPropArg> & {\n    defaultIndex?: number\n    onChange?: (index: number) => void\n    selectedIndex?: number\n    vertical?: boolean\n    manual?: boolean\n  }\n) {\n  let {\n    defaultIndex = 0,\n    vertical = false,\n    manual = false,\n    onChange,\n    selectedIndex = null,\n    ...passThroughProps\n  } = props\n  const orientation = vertical ? 'vertical' : 'horizontal'\n  const activation = manual ? 'manual' : 'auto'\n\n  let [state, dispatch] = useReducer(stateReducer, {\n    selectedIndex: null,\n    tabs: [],\n    panels: [],\n    orientation,\n    activation,\n  } as StateDefinition)\n  let slot = useMemo(() => ({ selectedIndex: state.selectedIndex }), [state.selectedIndex])\n  let onChangeRef = useRef<(index: number) => void>(() => {})\n\n  useEffect(() => {\n    dispatch({ type: ActionTypes.SetOrientation, orientation })\n  }, [orientation])\n\n  useEffect(() => {\n    dispatch({ type: ActionTypes.SetActivation, activation })\n  }, [activation])\n\n  useEffect(() => {\n    if (typeof onChange === 'function') {\n      onChangeRef.current = onChange\n    }\n  }, [onChange])\n\n  useEffect(() => {\n    if (state.tabs.length <= 0) return\n    if (selectedIndex === null && state.selectedIndex !== null) return\n\n    let tabs = state.tabs.map(tab => tab.current).filter(Boolean) as HTMLElement[]\n    let focusableTabs = tabs.filter(tab => !tab.hasAttribute('disabled'))\n\n    let indexToSet = selectedIndex ?? defaultIndex\n\n    // Underflow\n    if (indexToSet < 0) {\n      dispatch({ type: ActionTypes.SetSelectedIndex, index: tabs.indexOf(focusableTabs[0]) })\n    }\n\n    // Overflow\n    else if (indexToSet > state.tabs.length) {\n      dispatch({\n        type: ActionTypes.SetSelectedIndex,\n        index: tabs.indexOf(focusableTabs[focusableTabs.length - 1]),\n      })\n    }\n\n    // Middle\n    else {\n      let before = tabs.slice(0, indexToSet)\n      let after = tabs.slice(indexToSet)\n\n      let next = [...after, ...before].find(tab => focusableTabs.includes(tab))\n      if (!next) return\n\n      dispatch({ type: ActionTypes.SetSelectedIndex, index: tabs.indexOf(next) })\n    }\n  }, [defaultIndex, selectedIndex, state.tabs, state.selectedIndex])\n\n  let lastChangedIndex = useRef(state.selectedIndex)\n  let providerBag = useMemo<ContextType<typeof TabsContext>>(\n    () => [\n      state,\n      {\n        dispatch,\n        change(index: number) {\n          if (lastChangedIndex.current !== index) onChangeRef.current(index)\n          lastChangedIndex.current = index\n\n          dispatch({ type: ActionTypes.SetSelectedIndex, index })\n        },\n      },\n    ],\n    [state, dispatch]\n  )\n\n  return (\n    <TabsContext.Provider value={providerBag}>\n      {render({\n        props: { ...passThroughProps },\n        slot,\n        defaultTag: DEFAULT_TABS_TAG,\n        name: 'Tabs',\n      })}\n    </TabsContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_LIST_TAG = 'div' as const\ninterface ListRenderPropArg {\n  selectedIndex: number\n}\ntype ListPropsWeControl = 'role' | 'aria-orientation'\n\nfunction List<TTag extends ElementType = typeof DEFAULT_LIST_TAG>(\n  props: Props<TTag, ListRenderPropArg, ListPropsWeControl> & {}\n) {\n  let [{ selectedIndex, orientation }] = useTabsContext([Tab.name, List.name].join('.'))\n\n  let slot = { selectedIndex }\n  let propsWeControl = {\n    role: 'tablist',\n    'aria-orientation': orientation,\n  }\n  let passThroughProps = props\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_LIST_TAG,\n    name: 'Tabs.List',\n  })\n}\n\n// ---\n\nlet DEFAULT_TAB_TAG = 'button' as const\ninterface TabRenderPropArg {\n  selected: boolean\n}\ntype TabPropsWeControl = 'id' | 'role' | 'type' | 'aria-controls' | 'aria-selected' | 'tabIndex'\n\nexport function Tab<TTag extends ElementType = typeof DEFAULT_TAB_TAG>(\n  props: Props<TTag, TabRenderPropArg, TabPropsWeControl>\n) {\n  let id = `headlessui-tabs-tab-${useId()}`\n\n  let [\n    { selectedIndex, tabs, panels, orientation, activation },\n    { dispatch, change },\n  ] = useTabsContext(Tab.name)\n\n  let internalTabRef = useRef<HTMLElement>(null)\n  let tabRef = useSyncRefs(internalTabRef, element => {\n    if (!element) return\n    dispatch({ type: ActionTypes.ForceRerender })\n  })\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterTab, tab: internalTabRef })\n    return () => dispatch({ type: ActionTypes.UnregisterTab, tab: internalTabRef })\n  }, [dispatch, internalTabRef])\n\n  let myIndex = tabs.indexOf(internalTabRef)\n  let selected = myIndex === selectedIndex\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLElement>) => {\n      let list = tabs.map(tab => tab.current).filter(Boolean) as HTMLElement[]\n\n      if (event.key === Keys.Space || event.key === Keys.Enter) {\n        event.preventDefault()\n        event.stopPropagation()\n\n        change(myIndex)\n        return\n      }\n\n      switch (event.key) {\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n\n          return focusIn(list, Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n\n          return focusIn(list, Focus.Last)\n      }\n\n      return match(orientation, {\n        vertical() {\n          if (event.key === Keys.ArrowUp) return focusIn(list, Focus.Previous | Focus.WrapAround)\n          if (event.key === Keys.ArrowDown) return focusIn(list, Focus.Next | Focus.WrapAround)\n          return\n        },\n        horizontal() {\n          if (event.key === Keys.ArrowLeft) return focusIn(list, Focus.Previous | Focus.WrapAround)\n          if (event.key === Keys.ArrowRight) return focusIn(list, Focus.Next | Focus.WrapAround)\n          return\n        },\n      })\n    },\n    [tabs, orientation, myIndex, change]\n  )\n\n  let handleFocus = useCallback(() => {\n    internalTabRef.current?.focus()\n  }, [internalTabRef])\n\n  let handleSelection = useCallback(() => {\n    internalTabRef.current?.focus()\n    change(myIndex)\n  }, [change, myIndex, internalTabRef])\n\n  let slot = useMemo(() => ({ selected }), [selected])\n  let propsWeControl = {\n    ref: tabRef,\n    onKeyDown: handleKeyDown,\n    onFocus: activation === 'manual' ? handleFocus : handleSelection,\n    onClick: handleSelection,\n    id,\n    role: 'tab',\n    type: useResolveButtonType(props, internalTabRef),\n    'aria-controls': panels[myIndex]?.current?.id,\n    'aria-selected': selected,\n    tabIndex: selected ? 0 : -1,\n  }\n  let passThroughProps = props\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_TAB_TAG,\n    name: 'Tabs.Tab',\n  })\n}\n\n// ---\n\nlet DEFAULT_PANELS_TAG = 'div' as const\ninterface PanelsRenderPropArg {\n  selectedIndex: number\n}\n\nfunction Panels<TTag extends ElementType = typeof DEFAULT_PANELS_TAG>(\n  props: Props<TTag, PanelsRenderPropArg>\n) {\n  let [{ selectedIndex }] = useTabsContext([Tab.name, Panels.name].join('.'))\n\n  let slot = useMemo(() => ({ selectedIndex }), [selectedIndex])\n\n  return render({\n    props,\n    slot,\n    defaultTag: DEFAULT_PANELS_TAG,\n    name: 'Tabs.Panels',\n  })\n}\n\n// ---\n\nlet DEFAULT_PANEL_TAG = 'div' as const\ninterface PanelRenderPropArg {\n  selected: boolean\n}\ntype PanelPropsWeControl = 'id' | 'role' | 'aria-labelledby' | 'tabIndex'\nlet PanelRenderFeatures = Features.RenderStrategy | Features.Static\n\nfunction Panel<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(\n  props: Props<TTag, PanelRenderPropArg, PanelPropsWeControl> &\n    PropsForFeatures<typeof PanelRenderFeatures>\n) {\n  let [{ selectedIndex, tabs, panels }, { dispatch }] = useTabsContext(\n    [Tab.name, Panel.name].join('.')\n  )\n\n  let id = `headlessui-tabs-panel-${useId()}`\n  let internalPanelRef = useRef<HTMLElement>(null)\n  let panelRef = useSyncRefs(internalPanelRef, element => {\n    if (!element) return\n    dispatch({ type: ActionTypes.ForceRerender })\n  })\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterPanel, panel: internalPanelRef })\n    return () => dispatch({ type: ActionTypes.UnregisterPanel, panel: internalPanelRef })\n  }, [dispatch, internalPanelRef])\n\n  let myIndex = panels.indexOf(internalPanelRef)\n  let selected = myIndex === selectedIndex\n\n  let slot = useMemo(() => ({ selected }), [selected])\n  let propsWeControl = {\n    ref: panelRef,\n    id,\n    role: 'tabpanel',\n    'aria-labelledby': tabs[myIndex]?.current?.id,\n    tabIndex: selected ? 0 : -1,\n  }\n\n  let passThroughProps = props\n\n  return render({\n    props: { ...passThroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_PANEL_TAG,\n    features: PanelRenderFeatures,\n    visible: selected,\n    name: 'Tabs.Panel',\n  })\n}\n\n// ---\n\nTab.Group = Tabs\nTab.List = List\nTab.Panels = Panels\nTab.Panel = Panel\n"],"names":["navigate","useNavigate","className","icon","logoInner","logoOuter","onClick","title","children","defaultOpen","as","open","Icon","chevronDownIcon","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Fragment","selected","faqIcon","docsIcon","resourcesIcon","disabled","helpdeskIcon","Header","Footer","ActionTypes","reducers","state","action","selectedIndex","index","orientation","activation","tabs","tab","panels","panel","TabsContext","createContext","useTabsContext","component","context","useContext","err","Error","stateReducer","match","DEFAULT_TABS_TAG","Tab","props","id","useId","dispatch","change","internalTabRef","useRef","tabRef","useSyncRefs","element","type","ForceRerender","useIsoMorphicEffect","myIndex","handleKeyDown","useCallback","list","event","Keys","focusIn","Focus","vertical","horizontal","handleFocus","handleSelection","slot","useMemo","propsWeControl","ref","onKeyDown","onFocus","role","useResolveButtonType","tabIndex","passThroughProps","render","defaultTag","name","PanelRenderFeatures","Features","defaultIndex","manual","onChange","useReducer","onChangeRef","useEffect","focusableTabs","indexToSet","before","after","next","lastChangedIndex","providerBag","value","List","Panels","Panel","internalPanelRef","panelRef","features","visible"],"sourceRoot":""}