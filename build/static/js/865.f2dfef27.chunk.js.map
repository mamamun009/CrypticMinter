{"version":3,"file":"static/js/865.f2dfef27.chunk.js","mappings":"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","sources":["components/Base/Card/index.js","components/ForSale/Tabs/PriceTab.js","components/ForSale/Tabs/SelectField.js","components/ForSale/Tabs/DatePicker.js","components/ForSale/Tabs/AuctionTab.js","components/ForSale/Tabs/index.js","data/card.js","views/ForSale.js"],"sourcesContent":["import { maticBlack, heartIcon, maticMIcon } from '../../../assets/icons';\nimport Icon from '../../Utils/Icon';\nimport dayjs from 'dayjs';\nimport { useNavigate } from 'react-router-dom';\n\nconst Card = ({ item, button }) => {\n  const {\n    id,\n    price,\n    likes,\n    image,\n    creator,\n    title,\n    endTime,\n    info,\n    onBid,\n    onSale,\n  } = item;\n\n  const navigate = useNavigate();\n\n  return (\n    <div\n      className={`w-full max-w-[340px] rounded-lg px-3.5 py-2 border border-gray-100 shadow transition ${\n        button ? 'cursor-pointer hover:shadow-lg' : ''\n      } `}\n      onClick={() => {\n        if (button) {\n          navigate(`/view-item/${id}?onBid=${onBid}&onSale=${onSale}`);\n        }\n      }}\n    >\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center\">\n          <Icon icon={maticBlack} className=\"w-4 h-3.5 fill-primary\" />\n          <span className=\"ml-1 font-medium leading-5\">{price}</span>\n        </div>\n        <div\n          className={`flex items-center justify-center  transition bg-gray-100 rounded-full hover:shadow-sm p-2 \n              ${likes > 0 ? 'fill-pink' : 'fill-gray-500 hover:fill-gray-600'}\n            `}\n        >\n          <Icon icon={heartIcon} className=\"w-5 h-5 \" />\n          {likes > 0 && (\n            <span className=\"ml-1 text-xs font-semibold leading-5 \">27</span>\n          )}\n        </div>\n      </div>\n      <div className=\"mt-1 overflow-hidden rounded-md aspect-square\">\n        <img src={image} alt=\"item\" className=\"object-cover w-full h-full\" />\n      </div>\n      <div className=\"mt-2.5\">\n        <h6 className=\"text-xs font-light leading-5 text-black/60\">\n          {creator}\n        </h6>\n        <h4 className=\"font-medium leading-5 text-gray-900 font-madeOuterSans\">\n          {title}\n        </h4>\n      </div>\n      <div className=\"flex items-center justify-between mt-8 text-sm leading-4 \">\n        <span>\n          {endTime && (\n            <>\n              ⏳{' '}\n              <span className=\"text-black/50 \">\n                {dayjs(endTime).fromNow(true)} left\n              </span>\n            </>\n          )}\n        </span>\n        <span className=\"flex items-center gap-1.5 text-gray-500\">\n          {info && info.label && (\n            <>\n              {info.label} <Icon icon={maticMIcon} className=\"w-4 h-3\" />{' '}\n              {info.value}\n            </>\n          )}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import { Switch } from '@headlessui/react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { maticBlack } from '../../../assets/icons';\nimport Icon from '../../Utils/Icon';\nimport { useNavigate } from 'react-router';\n\nconst initialValues = {\n  price: 0,\n  receiveOffers: false,\n};\n\nconst validationSchema = Yup.object().shape({\n  price: Yup.number().required('Required'),\n  receiveOffers: Yup.boolean(),\n});\n\nconst serviceFee = 2.5;\nconst toRecieve = (price) => {\n  return price * (1 - serviceFee / 100);\n};\nconst convertTo$ = (matic) => {\n  return matic * (1 - serviceFee / 100) * 1.5;\n};\n\nconst PriceTab = () => {\n  const navigate = useNavigate();\n\n  const onSubmit = (values) => {\n    console.log(values);\n    // submit form and navigate back\n    navigate('/view-item');\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit,\n  });\n\n  return (\n    <div className=\"py-9\">\n      <h3 className=\"font-madeOuterSans font-medium text-lg leading-[22px] mb-5\">\n        Price\n      </h3>\n      {/* gray region */}\n      <div className=\"w-full p-6 border border-gray-200 rounded-lg bg-gray-50 \">\n        <div className=\"flex gap-3\">\n          {/* icon */}\n          <span className=\"flex items-center justify-center flex-shrink-0 w-12 h-12 bg-white rounded-full shadow-xl backdrop-blur-xl\">\n            <Icon icon={maticBlack} className=\"h-6 fill-primary w-7\" />\n          </span>\n          {/* field */}\n          <div className=\"relative flex-1 text-xl\">\n            <input\n              type=\"number\"\n              className={`py-2.5 px-3 w-full bg-white border border-gray-200 rounded-lg  text-gray-500\n                ${\n                  formik.touched.price && formik.errors.price\n                    ? 'border-red'\n                    : ''\n                }\n              `}\n              {...formik.getFieldProps('price')}\n            />\n            <span className=\"absolute font-medium text-gray-500 uppercase -translate-y-1/2 top-1/2 right-3\">\n              Matic\n            </span>\n          </div>\n        </div>\n        <p className=\"mt-3 text-sm text-gray-500 \">\n          Service fee {serviceFee}%. You will receive\n          <span className=\"mx-1 font-medium text-black\">\n            {toRecieve(formik.values.price)}\n          </span>\n          MATIC ~\n          <span className=\"mx-1 font-medium text-black\">\n            ${convertTo$(formik.values.price)}\n          </span>\n        </p>\n        {/* divider */}\n        <div className=\"w-full h-px my-6 bg-gray-300\" />\n\n        <div>\n          <div className=\"flex items-center w-full gap-8 bg-transparent \">\n            <div className=\"flex-1\">\n              <h5 className=\"text-lg text-black\">Recieve Offers</h5>\n              <p className=\"text-sm text-gray-500\">\n                Increase chances of sale by receiving offers from buyers\n              </p>\n            </div>\n            <div className=\"flex-shrink-0\">\n              <Switch\n                checked={formik.values.receiveOffers}\n                onChange={(value) => {\n                  formik.setFieldValue('receiveOffers', value);\n                }}\n                className={`${\n                  formik.values.receiveOffers ? 'bg-primary' : 'bg-gray-500/70'\n                } relative inline-flex items-center h-6 rounded-[32px] w-12\n             \n            `}\n              >\n                <span className=\"sr-only\">Recieve Offers</span>\n                <span\n                  className={`${\n                    formik.values.receiveOffers\n                      ? 'translate-x-7'\n                      : 'translate-x-1'\n                  } transition ease-in-out duration-200 inline-block w-4 h-4 bg-white rounded-full`}\n                />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* description */}\n      <div className=\"text-sm text-justify text-gray-500 mt-8.5 \">\n        <p>\n          Please keep an eye out for email notifications if you’re shipping the\n          physical pair as well. We expect you to act promptly as the Escrow\n          window only lasts 2 business days before the transaction is\n          automatically cancelled and the funds (MATIC) & NFT are returned to\n          their respective owner’s wallets.\n        </p>\n        <p className=\"mt-3.5\">\n          *offers will be recieved in Wrapped MATIC (WMATIC)\n        </p>\n      </div>\n\n      {/* button */}\n      <div className=\"mt-6 \">\n        <button\n          className=\"w-full max-w-xs p-4 font-medium leading-4 text-white transition rounded-md font-madeOuterSans bg-blue-dark hover:shadow-md\"\n          onClick={formik.submitForm}\n        >\n          List item\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PriceTab;\n","import { useState } from 'react';\nimport { chevronDownIcon } from '../../../assets/icons';\nimport Icon from '../../Utils/Icon';\nimport { Transition } from '@headlessui/react';\n\nconst SelectField = ({\n  label,\n  selected,\n  setSelected,\n  options,\n  placeholder,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className=\"relative flex flex-col flex-1 mt-2.5\">\n      <label htmlFor=\"range\" className=\"text-lg font-medium\">\n        {label}\n      </label>\n\n      <div\n        className=\" flex items-center relative mt-2.5 py-2.5 px-3 min-h-[48px] font-medium text-sm w-full bg-white border border-gray-200 rounded-lg  text-gray-900\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        {options?.find((option) => option.value === selected)?.label ||\n          placeholder ||\n          ' '}\n        <span className=\"absolute -translate-y-1/2 top-1/2 right-3\">\n          <Icon icon={chevronDownIcon} className=\"w-6 h-6 fill-gray-900\" />\n        </span>\n      </div>\n\n      <Transition\n        show={isOpen}\n        enter=\"transition duration-100 ease-out z-40\"\n        enterFrom=\"transform  opacity-0 \"\n        enterTo=\"transform  opacity-100 \"\n        leave=\"transition duration-75 ease-out z-40\"\n        leaveFrom=\"transform opacity-100\"\n        leaveTo=\"transform opacity-0 \"\n      >\n        <div className=\"absolute z-40 w-full px-4 -mt-1 bg-white border border-t-0 border-gray-200 rounded-b-lg\">\n          {options\n            ?.filter((option) => option.value !== selected)\n            .map((option) => (\n              <button\n                key={option.value}\n                className=\"py-2.5 block w-full font-medium text-sm leading-6 text-gray-900 border-t border-t-200 text-left transition hover:bg-gray-50 \"\n                onClick={() => {\n                  setSelected(option.value);\n                  setIsOpen(false);\n                }}\n              >\n                {option.label}\n              </button>\n            ))}\n        </div>\n      </Transition>\n    </div>\n  );\n};\n\nexport default SelectField;\n","import { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css fil\nimport { useState, useEffect } from 'react';\n\nconst DatePicker = ({\n  startDate,\n  setStartDate,\n  endDate,\n  setEndDate,\n  onClose,\n}) => {\n  const [localStartingDate, setLocalStartingDate] = useState(startDate);\n  const [localEndingDate, setLocalEndingDate] = useState(endDate);\n  useEffect(() => {\n    setLocalStartingDate(startDate);\n    setLocalEndingDate(endDate);\n  }, [startDate, endDate]);\n\n  const handleSelect = (ranges) => {\n    setLocalStartingDate(ranges.selection.startDate);\n    setLocalEndingDate(ranges.selection.endDate);\n  };\n\n  return (\n    <div className=\"relative z-50 px-1 pb-2 bg-white rounded-lg shadow-xl w-fit\">\n      <DateRange\n        ranges={[\n          {\n            startDate: localStartingDate,\n            endDate: localEndingDate,\n            key: 'selection',\n          },\n        ]}\n        onChange={handleSelect}\n        showMonthAndYearPickers={false}\n        rangeColors={[' #219653']}\n        showDateDisplay={false}\n        dragSelectionEnabled={true}\n        className=\"bg-transparent\"\n      />\n\n      <div className=\"flex items-center justify-between px-6 text-sm leading-4\">\n        <button\n          className=\"px-4 py-3 font-bold text-gray-700 transition rounded-md hover:text-gray-800\"\n          onClick={() => {\n            onClose();\n          }}\n        >\n          Cancel\n        </button>\n        <button\n          className=\"px-8 py-3 font-bold text-gray-100 rounded-md bg-green\"\n          onClick={() => {\n            setStartDate(localStartingDate);\n            setEndDate(localEndingDate);\n            onClose();\n          }}\n        >\n          Done\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default DatePicker;\n","import { useState } from 'react';\nimport { Switch, Transition } from '@headlessui/react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { maticMIcon, chevronDownIcon } from '../../../assets/icons';\nimport Icon from '../../Utils/Icon';\nimport { useNavigate } from 'react-router-dom';\nimport SelectField from './SelectField';\nimport dayjs from 'dayjs';\nimport DatePicker from './DatePicker';\n\nconst serviceFee = 2.5;\nconst toRecieve = (price) => {\n  return price * (1 - serviceFee / 100);\n};\nconst convertTo$ = (matic) => {\n  return matic * (1 - serviceFee / 100) * 1.5;\n};\n\nconst rangeOptions = [\n  {\n    label: '1 day',\n    value: '1 day',\n  },\n  {\n    label: '3 days',\n    value: '3 days',\n  },\n  {\n    label: '1 week',\n    value: '1 week',\n  },\n  {\n    label: '1 month',\n    value: '1 month',\n  },\n  {\n    label: 'Custom',\n    value: 'custom',\n  },\n];\n\nconst initialValues = {\n  price: 0,\n  reservePrice: false,\n  reservedPrice: 0,\n  range: '1 day',\n  startingDate: dayjs().toDate(),\n  endingDate: dayjs().add(1, 'day').toDate(),\n};\n\nconst validationSchema = Yup.object().shape({\n  price: Yup.number().required('Required'),\n  reservePrice: Yup.boolean(),\n  reservedPrice: Yup.number().when('reservePrice', {\n    is: true,\n    then: Yup.number().required('Required'),\n  }),\n  range: Yup.string().required('Required'),\n  startingDate: Yup.string().required('Required'),\n  endingDate: Yup.string().required('Required'),\n});\n\nconst AuctionTab = () => {\n  const [showCalender, setShowCalender] = useState(false);\n  const navigate = useNavigate();\n\n  const onSubmit = (values) => {\n    console.log(values);\n    // submit form and navigate back\n    navigate('/view-item');\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit,\n  });\n\n  return (\n    <div className=\"py-9\">\n      <h3 className=\"font-madeOuterSans font-medium text-lg leading-[22px] mb-5\">\n        Price\n      </h3>\n      {/* gray region 1 */}\n      <div className=\"w-full p-6 border border-gray-200 rounded-lg bg-gray-100/50 \">\n        <div className=\"flex gap-3\">\n          {/* icon */}\n          <span className=\"flex items-center justify-center flex-shrink-0 w-12 h-12 bg-white rounded-full shadow-xl backdrop-blur-xl\">\n            <Icon icon={maticMIcon} className=\"w-6 h-5\" />\n          </span>\n          {/* field */}\n          <div className=\"relative flex-1 text-xl\">\n            <input\n              type=\"number\"\n              className={`py-2.5 px-3 w-full bg-white border border-gray-200 rounded-lg  text-gray-500\n                ${\n                  formik.touched.price && formik.errors.price\n                    ? 'border-red'\n                    : ''\n                }\n              `}\n              {...formik.getFieldProps('price')}\n            />\n            <span className=\"absolute font-medium text-gray-500 uppercase -translate-y-1/2 top-1/2 right-3\">\n              WMatic\n            </span>\n          </div>\n        </div>\n        <p className=\"mt-3 text-sm text-gray-500 \">\n          Service fee {serviceFee}%. You will receive\n          <span className=\"mx-1 font-medium text-black\">\n            {toRecieve(formik.values.price)}\n          </span>\n          MATIC ~\n          <span className=\"mx-1 font-medium text-black\">\n            ${convertTo$(formik.values.price)}\n          </span>\n        </p>\n        {/* divider */}\n        <div className=\"w-full h-px my-6 bg-gray-300\" />\n\n        <div>\n          <div className=\"flex items-center w-full gap-8 bg-transparent \">\n            <div className=\"flex-1\">\n              <h5 className=\"text-lg text-black\">Reserve Price</h5>\n              <p className=\"text-sm text-gray-500\">\n                If you don't receive any bids equal to or greater than your\n                reserve, the auction will end without a sale.\n              </p>\n            </div>\n            <div className=\"flex-shrink-0\">\n              <Switch\n                checked={formik.values.reservePrice}\n                onChange={(value) => {\n                  formik.setFieldValue('reservePrice', value);\n                }}\n                className={`${\n                  formik.values.reservePrice ? 'bg-primary' : 'bg-gray-500/70'\n                } relative inline-flex items-center h-6 rounded-[32px] w-12\n             \n            `}\n              >\n                <span className=\"sr-only\">Recieve Offers</span>\n                <span\n                  className={`${\n                    formik.values.reservePrice\n                      ? 'translate-x-7'\n                      : 'translate-x-1'\n                  } transition ease-in-out duration-200 inline-block w-4 h-4 bg-white rounded-full`}\n                />\n              </Switch>\n            </div>\n          </div>\n          <Transition\n            show={formik.values.reservePrice}\n            enter=\"transition duration-100 ease-out\"\n            enterFrom=\"transform scale-95 opacity-0 \"\n            enterTo=\"transform scale-100 opacity-100 \"\n            leave=\"transition duration-75 ease-out\"\n            leaveFrom=\"transform scale-100 opacity-100 \"\n            leaveTo=\"transform scale-95 opacity-0 \"\n          >\n            <div className=\"mt-2.5\">\n              <div className=\"relative flex-1 text-xl\">\n                <input\n                  type=\"number\"\n                  className={`py-2.5 px-3 w-full bg-white border border-gray-200 rounded-lg  text-gray-500\n                ${\n                  formik.touched.reservedPrice && formik.errors.reservedPrice\n                    ? 'border-red'\n                    : ''\n                }\n              `}\n                  {...formik.getFieldProps('reservedPrice')}\n                />\n                <span className=\"absolute font-medium text-gray-500 uppercase -translate-y-1/2 top-1/2 right-3\">\n                  WMatic\n                </span>\n              </div>\n            </div>\n          </Transition>\n        </div>\n      </div>\n\n      <h3 className=\"font-madeOuterSans font-medium text-lg leading-[22px] mb-5 mt-12\">\n        Auction Period\n      </h3>\n\n      {/* gray region 2 */}\n      <div className=\"relative w-full p-6 border border-gray-200 rounded-lg bg-gray-100/50\">\n        {/* calender */}\n        {showCalender && (\n          <div className=\"absolute z-40 translate-x-full -right-2\">\n            <DatePicker\n              startDate={formik.values.startingDate}\n              endDate={formik.values.endingDate}\n              setStartDate={(value) =>\n                formik.setFieldValue('startingDate', value)\n              }\n              setEndDate={(value) => formik.setFieldValue('endingDate', value)}\n              onClose={() => setShowCalender(false)}\n            />\n          </div>\n        )}\n\n        {/* field */}\n        <SelectField\n          label=\"Range\"\n          selected={formik.values.range}\n          options={rangeOptions}\n          setSelected={(value) => {\n            formik.setFieldValue('range', value);\n            if (value === '1 day') {\n              formik.setFieldValue('startingDate', dayjs().toDate());\n              formik.setFieldValue('endingDate', dayjs().toDate());\n              setShowCalender(false);\n            }\n            if (value === '3 days') {\n              formik.setFieldValue('startingDate', dayjs().toDate());\n              formik.setFieldValue(\n                'endingDate',\n                dayjs().add(3, 'days').toDate()\n              );\n              setShowCalender(false);\n            }\n            if (value === '1 week') {\n              formik.setFieldValue('startingDate', dayjs().toDate());\n              formik.setFieldValue(\n                'endingDate',\n                dayjs().add(1, 'week').toDate()\n              );\n              setShowCalender(false);\n            }\n            if (value === '1 month') {\n              formik.setFieldValue('startingDate', dayjs().toDate());\n              formik.setFieldValue(\n                'endingDate',\n                dayjs().add(1, 'month').toDate()\n              );\n              setShowCalender(false);\n            }\n            if (value === 'custom') {\n              formik.setFieldValue('startingDate', dayjs().toDate());\n              formik.setFieldValue('endingDate', dayjs().toDate());\n              setShowCalender(true);\n            }\n          }}\n        />\n        <p className=\"mt-3 text-sm text-gray-500 \">\n          The auction starts as soon as you list the item.\n        </p>\n        {/* divider */}\n        <div className=\"w-full h-px mt-1.5 mb-3.5 bg-gray-300\" />\n\n        <div className=\"flex flex-col gap-4 xl:flex-row\">\n          <div className=\"flex-1\">\n            <h5 className=\"text-lg font-medium\">Starting Date</h5>\n            <div className=\"relative mt-4 text-xl\">\n              <div\n                className={`flex items-center relative py-2.5 px-3 min-h-[48px] font-medium text-sm w-full bg-white border border-gray-200 rounded-lg  text-gray-900\n                ${\n                  formik.values.range === 'custom'\n                    ? 'cursor-pointer'\n                    : 'opacity-80'\n                }\n              `}\n                onClick={() => {\n                  if (formik.values.range === 'custom') {\n                    setShowCalender(true);\n                  }\n                }}\n              >\n                {' '}\n                {dayjs(formik.values.startingDate).format('MMM DD, YYYY')}\n                <span className=\"absolute -translate-y-1/2 top-1/2 right-3\">\n                  <Icon\n                    icon={chevronDownIcon}\n                    className=\"w-6 h-6 fill-gray-900\"\n                  />\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <span className=\"hidden pt-12 text-sm font-medium xl:block \">_</span>\n\n          <div className=\"flex-1\">\n            <h5 className=\"text-lg font-medium\">Ending Date</h5>\n            <div className=\"relative w-full mt-4 text-xl\">\n              <div\n                className={`flex items-center relative py-2.5 px-3 min-h-[48px] font-medium text-sm w-full bg-white border border-gray-200 rounded-lg  text-gray-900\n                ${\n                  formik.values.range === 'custom'\n                    ? 'cursor-pointer'\n                    : 'opacity-80'\n                }\n              `}\n                onClick={() => {\n                  if (formik.values.range === 'custom') {\n                    setShowCalender(true);\n                  }\n                }}\n              >\n                {dayjs(formik.values.endingDate).format('MMM DD, YYYY')}\n                <span className=\"absolute -translate-y-1/2 top-1/2 right-3\">\n                  <Icon\n                    icon={chevronDownIcon}\n                    className=\"w-6 h-6 fill-gray-900\"\n                  />\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* description */}\n      <div className=\"text-sm text-justify text-gray-500 mt-8.5 \">\n        <p>\n          Please keep an eye out for email notifications if you’re shipping the\n          physical pair as well. We expect you to act promptly as the Escrow\n          window only lasts 2 business days before the transaction is\n          automatically cancelled and the funds (MATIC) & NFT are returned to\n          their respective owner’s wallets.\n        </p>\n        <p className=\"mt-3.5\">\n          *Any bid placed in the last 10 minutes extends the auction by 10\n          minutes.\n        </p>\n      </div>\n\n      {/* button */}\n      <div className=\"mt-6 \">\n        <button\n          className=\"w-full max-w-xs p-4 font-medium leading-4 text-white transition rounded-md font-madeOuterSans bg-blue-dark hover:shadow-md\"\n          onClick={formik.submitForm}\n        >\n          List item\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AuctionTab;\n","import { Fragment } from 'react';\nimport { Tab } from '@headlessui/react';\nimport PriceTab from './PriceTab';\nimport AuctionTab from './AuctionTab';\n\nconst Tabs = () => {\n  return (\n    <div className=\"w-full max-w-[400px] mx-auto md:ml-0\">\n      <Tab.Group>\n        <Tab.List className=\"flex w-full gap-1 p-2 border border-gray-200 rounded-lg bg-gray-50\">\n          <Tab as={Fragment}>\n            {({ selected }) => (\n              <button\n                className={`\n              p-3.5 rounded-md font-semibold text-lg  flex-1 transition\n                ${\n                  selected\n                    ? 'bg-blue-dark/80 text-white'\n                    : 'bg-transparent text-black'\n                }\n                `}\n              >\n                Fixed Price\n              </button>\n            )}\n          </Tab>\n          <Tab as={Fragment}>\n            {({ selected }) => (\n              <button\n                className={`\n              p-3.5 rounded-md font-semibold text-lg  flex-1 transition\n                ${\n                  selected\n                    ? 'bg-blue-dark/80 text-white'\n                    : 'bg-transparent text-black'\n                }\n                `}\n              >\n                Auction\n              </button>\n            )}\n          </Tab>\n        </Tab.List>\n        <Tab.Panels>\n          <Tab.Panel>\n            <PriceTab />\n          </Tab.Panel>\n          <Tab.Panel>\n            <AuctionTab />\n          </Tab.Panel>\n        </Tab.Panels>\n      </Tab.Group>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import cardPlaceholder from '../assets/images/card-placeholder.png';\nimport dayjs from 'dayjs';\n\nconst card = {\n  id: '1',\n  price: 245,\n  likes: 0,\n  creator: 'DenzelWashington',\n  image: cardPlaceholder,\n  title: 'Nike Air Jordan 1 OG',\n};\n\nexport default card;\n","import Card from '../components/Base/Card';\nimport Header from '../components/Base/Header';\nimport Tabs from '../components/ForSale/Tabs';\nimport card from '../data/card';\n\nconst ForSale = () => {\n  return (\n    <div className=\"relative w-full h-full\">\n      <Header />\n\n      <section className=\"flex justify-center flex-1 my-32\">\n        <div className=\"w-full max-w-sm px-4 py-6 md:max-w-2xl lg:max-w-3xl xl:max-w-6xl\">\n          <h1 className=\"text-5xl leading-tight font-madeOuterSans\">\n            List dunks for sale\n          </h1>\n\n          <div className=\"flex flex-col-reverse mt-16 space-y-10 space-y-reverse md:space-y-0 md:flex-row\">\n            {/* left */}\n\n            <div className=\"w-full px-2 md:w-6/12 \">\n              <h3 className=\"font-madeOuterSans font-medium text-lg leading-[22px] mb-5\">\n                Mode\n              </h3>\n\n              <Tabs />\n            </div>\n\n            {/* right */}\n            <div className=\"flex justify-center w-full md:w-6/12 \">\n              <div className=\"flex relative flex-col md:max-w-[340px] w-full text-left\">\n                <div className=\"sticky top-40\">\n                  <h3 className=\"font-madeOuterSans font-medium text-lg leading-[22px] mb-5\">\n                    Preview\n                  </h3>\n                  <div className=\"\">\n                    <Card item={card} />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default ForSale;\n"],"names":["item","button","id","price","likes","image","creator","title","endTime","info","onBid","onSale","navigate","useNavigate","className","onClick","icon","maticBlack","heartIcon","src","alt","dayjs","fromNow","label","maticMIcon","value","initialValues","receiveOffers","validationSchema","Yup","shape","required","matic","formik","useFormik","onSubmit","values","console","log","Icon","type","touched","errors","getFieldProps","checked","onChange","setFieldValue","submitForm","selected","setSelected","options","placeholder","useState","isOpen","setIsOpen","htmlFor","find","option","chevronDownIcon","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","filter","map","startDate","setStartDate","endDate","setEndDate","onClose","localStartingDate","setLocalStartingDate","localEndingDate","setLocalEndingDate","useEffect","ranges","key","selection","showMonthAndYearPickers","rangeColors","showDateDisplay","dragSelectionEnabled","rangeOptions","reservePrice","reservedPrice","range","startingDate","toDate","endingDate","add","when","is","then","showCalender","setShowCalender","format","as","Fragment","Header","Card","card"],"sourceRoot":""}